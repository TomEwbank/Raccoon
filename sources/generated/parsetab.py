
# generated\parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xd1L\xa2\xbb8\x1a\xe6\xdaB\xde\xfdCR\xaa\xcc\x88'
    
_lr_action_items = {'FUNCTION':([0,13,14,16,17,19,20,26,29,34,61,82,86,93,105,110,112,115,118,122,128,130,131,133,140,142,143,144,145,],[1,-5,-3,-48,-4,1,-51,-49,-50,-6,1,1,1,1,-52,1,-59,-62,-63,-61,1,1,1,1,-65,-60,-64,-66,-67,]),'RETURN':([0,13,14,16,17,19,20,26,29,34,61,82,86,93,105,110,112,115,118,122,128,130,131,133,140,142,143,144,145,],[6,-5,-3,-48,-4,6,-51,-49,-50,-6,6,6,6,6,-52,6,-59,-62,-63,-61,6,6,6,6,-65,-60,-64,-66,-67,]),'LSBRACKET':([12,35,42,],[40,40,70,]),'DIV_OP':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,54,-29,-23,54,54,54,54,54,54,-20,54,54,-26,-35,54,54,54,-36,54,-37,-24,-19,54,54,54,]),'WHILE':([0,13,14,16,17,19,20,26,29,34,61,82,86,93,105,110,112,115,118,122,128,130,131,133,140,142,143,144,145,],[3,-5,-3,-48,-4,3,-51,-49,-50,-6,3,3,3,3,-52,3,-59,-62,-63,-61,3,3,3,3,-65,-60,-64,-66,-67,]),'COLON':([4,7,8,15,24,25,31,35,36,45,68,72,74,75,76,77,78,79,80,84,88,89,90,96,119,121,123,125,],[-30,-28,-31,-25,-27,-32,-29,-23,63,73,-20,-26,-35,-38,-39,-34,-36,-33,-37,97,101,-24,-19,106,124,126,127,129,]),'CONST':([12,],[39,]),'TRUE':([0,3,6,13,14,16,17,19,20,22,23,26,29,34,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,70,82,86,91,93,100,105,110,112,113,115,118,120,122,128,130,131,133,140,142,143,144,145,],[8,8,8,-5,-3,-48,-4,8,-51,8,8,-49,-50,-6,8,8,8,8,-41,-45,8,-46,-47,8,8,8,8,-43,-42,8,-44,8,-40,8,8,8,8,8,8,8,-52,8,-59,8,-62,-63,8,-61,8,8,8,8,-65,-60,-64,-66,-67,]),'RPAREN':([4,7,8,15,24,25,31,35,41,44,62,67,68,69,72,74,75,76,77,78,79,80,83,85,89,90,102,107,116,],[-30,-28,-31,-25,-27,-32,-29,-23,68,72,84,90,-20,-21,-26,-35,-38,-39,-34,-36,-33,-37,96,-55,-24,-19,-22,-56,121,]),'CGE':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,50,-29,-23,50,50,50,50,50,50,-20,50,50,-26,-35,50,50,-34,-36,-33,-37,-24,-19,50,50,50,]),'COMMA':([4,7,8,15,24,25,31,35,68,69,72,74,75,76,77,78,79,80,85,89,90,109,],[-30,-28,-31,-25,-27,-32,-29,-23,-20,91,-26,-35,-38,-39,-34,-36,-33,-37,98,-24,-19,113,]),'CEQ':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,56,-29,-23,56,56,56,56,56,56,-20,56,56,-26,-35,56,56,-34,-36,-33,-37,-24,-19,56,56,56,]),'ADD_OP':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,57,-29,-23,57,57,57,57,57,57,-20,57,57,-26,-35,57,57,-34,-36,-33,-37,-24,-19,57,57,57,]),'INTEGER':([0,3,6,13,14,16,17,19,20,22,23,26,29,34,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,70,82,86,91,93,100,105,110,112,113,115,118,120,122,128,130,131,133,140,142,143,144,145,],[7,7,7,-5,-3,-48,-4,7,-51,7,7,-49,-50,-6,7,7,7,7,-41,-45,7,-46,-47,7,7,7,7,-43,-42,7,-44,7,-40,7,7,7,7,7,7,7,-52,7,-59,7,-62,-63,7,-61,7,7,7,7,-65,-60,-64,-66,-67,]),'IDENTIFIER':([0,1,3,6,9,13,14,16,17,19,20,22,23,26,29,34,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,82,86,91,93,98,100,105,110,112,113,115,118,120,122,128,130,131,133,140,142,143,144,145,],[12,33,35,35,38,-5,-3,-48,-4,12,-51,35,35,-49,-50,-6,35,35,35,35,-41,-45,35,-46,-47,35,35,35,35,-43,-42,35,-44,35,-40,12,85,88,35,12,12,35,12,85,35,-52,12,-59,35,-62,-63,35,-61,12,12,12,12,-65,-60,-64,-66,-67,]),'CGT':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,49,-29,-23,49,49,49,49,49,49,-20,49,49,-26,-35,49,49,-34,-36,-33,-37,-24,-19,49,49,49,]),'$end':([11,13,14,16,17,19,20,26,29,34,43,105,112,115,118,122,140,142,143,144,145,],[0,-5,-3,-48,-4,-1,-51,-49,-50,-6,-2,-52,-59,-62,-63,-61,-65,-60,-64,-66,-67,]),'END_STATEMENT':([0,2,4,5,6,7,8,10,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,34,35,37,61,63,65,68,71,72,73,74,75,76,77,78,79,80,82,86,89,90,93,94,97,101,103,105,106,108,110,111,112,115,117,118,122,124,126,127,128,129,130,131,133,136,138,139,140,141,142,143,144,145,],[14,34,-30,-10,-12,-28,-31,-8,-23,-5,-3,-25,-48,-4,-7,14,-51,-11,-27,-32,-49,-9,-14,-50,-15,-29,61,-6,-23,-13,14,86,-18,-20,-16,-26,93,-35,-38,-39,-34,-36,-33,-37,14,14,-24,-19,14,105,-54,110,-17,-52,-53,112,14,115,-59,-62,122,-63,-61,128,130,131,14,133,14,14,14,140,142,143,-65,144,-60,-64,-66,-67,]),'END':([13,14,16,17,20,26,29,34,81,82,95,99,104,105,112,114,115,118,122,132,134,135,137,140,142,143,144,145,],[-5,-3,-48,-4,-51,-49,-50,-6,94,-57,-58,108,111,-52,-59,117,-62,-63,-61,136,138,139,141,-65,-60,-64,-66,-67,]),'STRING':([0,3,6,13,14,16,17,19,20,22,23,26,29,34,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,70,82,86,91,93,100,105,110,112,113,115,118,120,122,128,130,131,133,140,142,143,144,145,],[15,15,15,-5,-3,-48,-4,15,-51,15,15,-49,-50,-6,15,15,15,15,-41,-45,15,-46,-47,15,15,15,15,-43,-42,15,-44,15,-40,15,15,15,15,15,15,15,-52,15,-59,15,-62,-63,15,-61,15,15,15,15,-65,-60,-64,-66,-67,]),'FOR':([0,13,14,16,17,19,20,26,29,34,61,82,86,93,105,110,112,115,118,122,128,130,131,133,140,142,143,144,145,],[9,-5,-3,-48,-4,9,-51,-49,-50,-6,9,9,9,9,-52,9,-59,-62,-63,-61,9,9,9,9,-65,-60,-64,-66,-67,]),'CLE':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,47,-29,-23,47,47,47,47,47,47,-20,47,47,-26,-35,47,47,-34,-36,-33,-37,-24,-19,47,47,47,]),'ELSE':([115,118,144,145,],[119,123,-66,-67,]),'RANGE':([64,],[87,]),'CNE':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,55,-29,-23,55,55,55,55,55,55,-20,55,55,-26,-35,55,55,-34,-36,-33,-37,-24,-19,55,55,55,]),'LPAREN':([0,3,6,12,13,14,16,17,19,20,22,23,26,29,33,34,35,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,70,82,86,87,91,93,100,105,110,112,113,115,118,120,122,128,130,131,133,140,142,143,144,145,],[22,22,22,41,-5,-3,-48,-4,22,-51,22,22,-49,-50,62,-6,41,22,22,22,22,-41,-45,22,-46,-47,22,22,22,22,-43,-42,22,-44,22,-40,22,22,22,22,100,22,22,22,-52,22,-59,22,-62,-63,22,-61,22,22,22,22,-65,-60,-64,-66,-67,]),'IN':([38,],[64,]),'CLT':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,58,-29,-23,58,58,58,58,58,58,-20,58,58,-26,-35,58,58,-34,-36,-33,-37,-24,-19,58,58,58,]),'IF':([0,13,14,16,17,19,20,26,29,34,61,82,86,93,105,110,112,115,118,122,128,130,131,133,140,142,143,144,145,],[23,-5,-3,-48,-4,23,-51,-49,-50,-6,23,23,23,23,-52,23,-59,-62,-63,-61,23,23,23,23,-65,-60,-64,-66,-67,]),'AND':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,46,-29,-23,46,46,46,46,46,46,-20,46,46,-26,-35,46,46,-34,-36,-33,-37,-24,-19,46,46,46,]),'MUL_OP':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,48,-29,-23,48,48,48,48,48,48,-20,48,48,-26,-35,48,48,48,-36,48,-37,-24,-19,48,48,48,]),'FALSE':([0,3,6,13,14,16,17,19,20,22,23,26,29,34,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,70,82,86,91,93,100,105,110,112,113,115,118,120,122,128,130,131,133,140,142,143,144,145,],[25,25,25,-5,-3,-48,-4,25,-51,25,25,-49,-50,-6,25,25,25,25,-41,-45,25,-46,-47,25,25,25,25,-43,-42,25,-44,25,-40,25,25,25,25,25,25,25,-52,25,-59,25,-62,-63,25,-61,25,25,25,25,-65,-60,-64,-66,-67,]),'DOUBLE':([0,3,6,13,14,16,17,19,20,22,23,26,29,34,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,70,82,86,91,93,100,105,110,112,113,115,118,120,122,128,130,131,133,140,142,143,144,145,],[31,31,31,-5,-3,-48,-4,31,-51,31,31,-49,-50,-6,31,31,31,31,-41,-45,31,-46,-47,31,31,31,31,-43,-42,31,-44,31,-40,31,31,31,31,31,31,31,-52,31,-59,31,-62,-63,31,-61,31,31,31,31,-65,-60,-64,-66,-67,]),'SUB_OP':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,53,-29,-23,53,53,53,53,53,53,-20,53,53,-26,-35,53,53,-34,-36,-33,-37,-24,-19,53,53,53,]),'ASSIGN':([12,],[42,]),'BREAK':([0,13,14,16,17,19,20,26,29,34,61,82,86,93,105,110,112,115,118,122,128,130,131,133,140,142,143,144,145,],[28,-5,-3,-48,-4,28,-51,-49,-50,-6,28,28,28,28,-52,28,-59,-62,-63,-61,28,28,28,28,-65,-60,-64,-66,-67,]),'RSBRACKET':([4,7,8,15,24,25,31,35,66,68,69,72,74,75,76,77,78,79,80,89,90,92,102,],[-30,-28,-31,-25,-27,-32,-29,-23,89,-20,-21,-26,-35,-38,-39,-34,-36,-33,-37,-24,-19,103,-22,]),'CONTINUE':([0,13,14,16,17,19,20,26,29,34,61,82,86,93,105,110,112,115,118,122,128,130,131,133,140,142,143,144,145,],[30,-5,-3,-48,-4,30,-51,-49,-50,-6,30,30,30,30,-52,30,-59,-62,-63,-61,30,30,30,30,-65,-60,-64,-66,-67,]),'ELSEIF':([115,144,],[120,120,]),'MOD_OP':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,59,-29,-23,59,59,59,59,59,59,-20,59,59,-26,-35,59,59,59,-36,59,-37,-24,-19,59,59,59,]),'OR':([4,7,8,12,15,24,25,27,31,35,36,37,44,45,65,66,68,69,71,72,74,75,76,77,78,79,80,89,90,109,116,125,],[-30,-28,-31,-23,-25,-27,-32,60,-29,-23,60,60,60,60,60,60,-20,60,60,-26,-35,60,60,-34,-36,-33,-37,-24,-19,60,60,60,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_def_args':([62,98,],[83,107,]),'elseif_list':([115,144,],[118,145,]),'small_stmt':([0,19,61,82,86,93,110,128,130,131,133,],[2,2,2,2,2,2,2,2,2,2,2,]),'comb_op':([27,36,37,44,45,65,66,69,71,74,75,76,77,78,79,80,109,116,125,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'boolean':([0,3,6,19,22,23,39,40,41,42,48,51,52,53,54,57,59,61,70,82,86,91,93,100,110,113,120,128,130,131,133,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'return_stmt':([0,19,61,82,86,93,110,128,130,131,133,],[5,5,5,5,5,5,5,5,5,5,5,]),'list_args':([41,70,91,],[67,92,102,]),'comp_op':([27,36,37,44,45,65,66,69,71,74,75,76,77,78,79,80,109,116,125,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'const_decl':([0,19,61,82,86,93,110,128,130,131,133,],[10,10,10,10,10,10,10,10,10,10,10,]),'program':([0,19,],[11,43,]),'compound_stmt':([0,19,61,82,86,93,110,128,130,131,133,],[13,13,13,13,13,13,13,13,13,13,13,]),'body':([61,82,86,93,110,128,130,131,133,],[81,95,99,104,114,132,134,135,137,]),'head':([1,],[32,]),'func_def':([0,19,61,82,86,93,110,128,130,131,133,],[16,16,16,16,16,16,16,16,16,16,16,]),'simple_stmt':([0,19,61,82,86,93,110,128,130,131,133,],[17,17,17,17,17,17,17,17,17,17,17,]),'assignment':([0,19,61,82,86,93,110,128,130,131,133,],[18,18,18,18,18,18,18,18,18,18,18,]),'stmt':([0,19,61,82,86,93,110,128,130,131,133,],[19,19,82,82,82,82,82,82,82,82,82,]),'for_stmt':([0,19,61,82,86,93,110,128,130,131,133,],[20,20,20,20,20,20,20,20,20,20,20,]),'loop_stmt':([0,19,61,82,86,93,110,128,130,131,133,],[21,21,21,21,21,21,21,21,21,21,21,]),'func_call':([0,3,6,19,22,23,39,40,41,42,48,51,52,53,54,57,59,61,70,82,86,91,93,100,110,113,120,128,130,131,133,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'if_stmt':([0,19,61,82,86,93,110,128,130,131,133,],[26,26,26,26,26,26,26,26,26,26,26,]),'expr':([0,3,6,19,22,23,39,40,41,42,48,51,52,53,54,57,59,61,70,82,86,91,93,100,110,113,120,128,130,131,133,],[27,36,37,27,44,45,65,66,69,71,74,75,76,77,78,79,80,27,69,27,27,69,27,109,27,116,125,27,27,27,27,]),'while_stmt':([0,19,61,82,86,93,110,128,130,131,133,],[29,29,29,29,29,29,29,29,29,29,29,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_program','./parser.py',17),
  ('program -> stmt program','program',2,'p_program','./parser.py',18),
  ('stmt -> END_STATEMENT','stmt',1,'p_stmt_type','./parser.py',28),
  ('stmt -> simple_stmt','stmt',1,'p_stmt_type','./parser.py',29),
  ('stmt -> compound_stmt','stmt',1,'p_stmt_type','./parser.py',30),
  ('simple_stmt -> small_stmt END_STATEMENT','simple_stmt',2,'p_simple_stmt','./parser.py',34),
  ('small_stmt -> assignment','small_stmt',1,'p_small_stmt','./parser.py',38),
  ('small_stmt -> const_decl','small_stmt',1,'p_small_stmt','./parser.py',39),
  ('small_stmt -> expr','small_stmt',1,'p_small_stmt','./parser.py',40),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','./parser.py',41),
  ('small_stmt -> loop_stmt','small_stmt',1,'p_small_stmt','./parser.py',42),
  ('return_stmt -> RETURN','return_stmt',1,'p_','./parser.py',46),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_','./parser.py',47),
  ('loop_stmt -> BREAK','loop_stmt',1,'p_break','./parser.py',54),
  ('loop_stmt -> CONTINUE','loop_stmt',1,'p_continue','./parser.py',58),
  ('assignment -> IDENTIFIER ASSIGN expr','assignment',3,'p_assign','./parser.py',62),
  ('assignment -> IDENTIFIER ASSIGN LSBRACKET list_args RSBRACKET','assignment',5,'p_assign','./parser.py',63),
  ('const_decl -> IDENTIFIER CONST expr','const_decl',3,'p_const','./parser.py',70),
  ('func_call -> IDENTIFIER LPAREN list_args RPAREN','func_call',4,'p_func_call','./parser.py',75),
  ('func_call -> IDENTIFIER LPAREN RPAREN','func_call',3,'p_func_call','./parser.py',76),
  ('list_args -> expr','list_args',1,'p_list_args','./parser.py',83),
  ('list_args -> expr COMMA list_args','list_args',3,'p_list_args','./parser.py',84),
  ('expr -> IDENTIFIER','expr',1,'p_expr_id','./parser.py',92),
  ('expr -> IDENTIFIER LSBRACKET expr RSBRACKET','expr',4,'p_expr_id','./parser.py',93),
  ('expr -> STRING','expr',1,'p_expr_string','./parser.py',100),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','./parser.py',104),
  ('expr -> func_call','expr',1,'p_expr','./parser.py',105),
  ('expr -> INTEGER','expr',1,'p_expr_num','./parser.py',112),
  ('expr -> DOUBLE','expr',1,'p_expr_num','./parser.py',113),
  ('expr -> boolean','expr',1,'p_expr_bool','./parser.py',117),
  ('boolean -> TRUE','boolean',1,'p_true','./parser.py',121),
  ('boolean -> FALSE','boolean',1,'p_false','./parser.py',125),
  ('expr -> expr ADD_OP expr','expr',3,'p_op','./parser.py',129),
  ('expr -> expr SUB_OP expr','expr',3,'p_op','./parser.py',130),
  ('expr -> expr MUL_OP expr','expr',3,'p_op','./parser.py',131),
  ('expr -> expr DIV_OP expr','expr',3,'p_op','./parser.py',132),
  ('expr -> expr MOD_OP expr','expr',3,'p_op','./parser.py',133),
  ('expr -> expr comb_op expr','expr',3,'p_op','./parser.py',134),
  ('expr -> expr comp_op expr','expr',3,'p_op','./parser.py',135),
  ('comb_op -> OR','comb_op',1,'p_comb_op','./parser.py',139),
  ('comb_op -> AND','comb_op',1,'p_comb_op','./parser.py',140),
  ('comp_op -> CEQ','comp_op',1,'p_comp_op','./parser.py',144),
  ('comp_op -> CNE','comp_op',1,'p_comp_op','./parser.py',145),
  ('comp_op -> CLT','comp_op',1,'p_comp_op','./parser.py',146),
  ('comp_op -> CLE','comp_op',1,'p_comp_op','./parser.py',147),
  ('comp_op -> CGT','comp_op',1,'p_comp_op','./parser.py',148),
  ('comp_op -> CGE','comp_op',1,'p_comp_op','./parser.py',149),
  ('compound_stmt -> func_def','compound_stmt',1,'p_compound_stmt','./parser.py',153),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','./parser.py',154),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','./parser.py',155),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','./parser.py',156),
  ('func_def -> FUNCTION head END_STATEMENT body END END_STATEMENT','func_def',6,'p_func_def','./parser.py',160),
  ('head -> IDENTIFIER LPAREN func_def_args RPAREN COLON','head',5,'p_head','./parser.py',164),
  ('head -> IDENTIFIER LPAREN RPAREN COLON','head',4,'p_head','./parser.py',165),
  ('func_def_args -> IDENTIFIER','func_def_args',1,'p_func_def_args','./parser.py',172),
  ('func_def_args -> IDENTIFIER COMMA func_def_args','func_def_args',3,'p_func_def_args','./parser.py',173),
  ('body -> stmt','body',1,'p_body','./parser.py',180),
  ('body -> stmt body','body',2,'p_body','./parser.py',181),
  ('while_stmt -> WHILE expr COLON END_STATEMENT body END END_STATEMENT','while_stmt',7,'p_while','./parser.py',188),
  ('for_stmt -> FOR IDENTIFIER IN RANGE LPAREN expr COMMA expr RPAREN COLON END_STATEMENT body END END_STATEMENT','for_stmt',14,'p_for','./parser.py',193),
  ('for_stmt -> FOR IDENTIFIER IN IDENTIFIER COLON END_STATEMENT body END END_STATEMENT','for_stmt',9,'p_for','./parser.py',194),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT','if_stmt',7,'p_if','./parser.py',205),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT elseif_list','if_stmt',8,'p_if','./parser.py',206),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT elseif_list ELSE COLON END_STATEMENT body END END_STATEMENT','if_stmt',14,'p_if','./parser.py',207),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT ELSE COLON END_STATEMENT body END END_STATEMENT','if_stmt',13,'p_if','./parser.py',208),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT body END END_STATEMENT','elseif_list',7,'p_elseif','./parser.py',219),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT body END END_STATEMENT elseif_list','elseif_list',8,'p_elseif','./parser.py',220),
]
