
# generated\parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xa8\x8dvA/\xb1^\xb6\xea!\xd2\xa3\xe3Jp\x1a'
    
_lr_action_items = {'END_STATEMENT':([2,4,5,6,7,8,10,12,16,19,22,23,25,26,28,29,30,33,35,61,63,65,69,70,71,72,73,74,75,76,77,78,87,89,92,95,99,101,104,106,109,115,122,124,125,127,134,136,137,139,],[32,-28,-9,-11,-26,-29,-7,-22,-6,-10,-25,-30,-8,-13,-14,-27,59,-22,-12,84,-17,-19,-15,-24,91,-33,-36,-37,-32,-34,-31,-35,-23,-18,103,-52,108,-16,-51,110,113,120,126,128,129,131,138,140,141,142,]),'RETURN':([0,13,14,15,17,18,24,27,32,59,80,84,91,103,108,110,113,116,120,126,128,129,131,138,140,141,142,143,],[6,-4,-46,-3,6,-49,-47,-48,-5,6,6,6,6,-50,6,-57,-60,-61,-59,6,6,6,6,-63,-58,-62,-64,-65,]),'LSBRACKET':([12,33,40,],[38,38,68,]),'DIV_OP':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,52,-27,-22,52,52,52,52,52,52,-19,52,52,-24,-33,52,52,52,-34,52,-35,-23,-18,52,52,52,]),'WHILE':([0,13,14,15,17,18,24,27,32,59,80,84,91,103,108,110,113,116,120,126,128,129,131,138,140,141,142,143,],[3,-4,-46,-3,3,-49,-47,-48,-5,3,3,3,3,-50,3,-57,-60,-61,-59,3,3,3,3,-63,-58,-62,-64,-65,]),'CONST':([12,],[37,]),'TRUE':([0,3,6,13,14,15,17,18,20,21,24,27,32,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,80,84,88,91,98,103,108,110,111,113,116,118,120,126,128,129,131,138,140,141,142,143,],[8,8,8,-4,-46,-3,8,-49,8,8,-47,-48,-5,8,8,8,8,-39,-43,8,-44,-45,8,8,8,8,-41,-40,8,-42,8,-38,8,8,8,8,8,8,8,-50,8,-57,8,-60,-61,8,-59,8,8,8,8,-63,-58,-62,-64,-65,]),'RPAREN':([4,7,8,22,23,29,33,39,42,60,65,66,67,70,72,73,74,75,76,77,78,81,83,87,89,100,105,114,],[-28,-26,-29,-25,-30,-27,-22,65,70,82,-19,-20,89,-24,-33,-36,-37,-32,-34,-31,-35,94,-53,-23,-18,-21,-54,119,]),'CGE':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,48,-27,-22,48,48,48,48,48,48,-19,48,48,-24,-33,48,48,-32,-34,-31,-35,-23,-18,48,48,48,]),'COLON':([4,7,8,22,23,29,33,34,43,65,70,72,73,74,75,76,77,78,82,86,87,89,94,117,119,121,123,],[-28,-26,-29,-25,-30,-27,-22,61,71,-19,-24,-33,-36,-37,-32,-34,-31,-35,95,99,-23,-18,104,122,124,125,127,]),'CEQ':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,54,-27,-22,54,54,54,54,54,54,-19,54,54,-24,-33,54,54,-32,-34,-31,-35,-23,-18,54,54,54,]),'ADD_OP':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,55,-27,-22,55,55,55,55,55,55,-19,55,55,-24,-33,55,55,-32,-34,-31,-35,-23,-18,55,55,55,]),'INTEGER':([0,3,6,13,14,15,17,18,20,21,24,27,32,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,80,84,88,91,98,103,108,110,111,113,116,118,120,126,128,129,131,138,140,141,142,143,],[7,7,7,-4,-46,-3,7,-49,7,7,-47,-48,-5,7,7,7,7,-39,-43,7,-44,-45,7,7,7,7,-41,-40,7,-42,7,-38,7,7,7,7,7,7,7,-50,7,-57,7,-60,-61,7,-59,7,7,7,7,-63,-58,-62,-64,-65,]),'IDENTIFIER':([0,1,3,6,9,13,14,15,17,18,20,21,24,27,32,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,68,80,84,88,91,96,98,103,108,110,111,113,116,118,120,126,128,129,131,138,140,141,142,143,],[12,31,33,33,36,-4,-46,-3,12,-49,33,33,-47,-48,-5,33,33,33,33,-39,-43,33,-44,-45,33,33,33,33,-41,-40,33,-42,33,-38,12,83,86,33,12,12,33,12,83,33,-50,12,-57,33,-60,-61,33,-59,12,12,12,12,-63,-58,-62,-64,-65,]),'CGT':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,47,-27,-22,47,47,47,47,47,47,-19,47,47,-24,-33,47,47,-32,-34,-31,-35,-23,-18,47,47,47,]),'$end':([11,13,14,15,17,18,24,27,32,41,103,110,113,116,120,138,140,141,142,143,],[0,-4,-46,-3,-1,-49,-47,-48,-5,-2,-50,-57,-60,-61,-59,-63,-58,-62,-64,-65,]),'FUNCTION':([0,13,14,15,17,18,24,27,32,59,80,84,91,103,108,110,113,116,120,126,128,129,131,138,140,141,142,143,],[1,-4,-46,-3,1,-49,-47,-48,-5,1,1,1,1,-50,1,-57,-60,-61,-59,1,1,1,1,-63,-58,-62,-64,-65,]),'END':([13,14,15,18,24,27,32,79,80,93,97,102,103,110,112,113,116,120,130,132,133,135,138,140,141,142,143,],[-4,-46,-3,-49,-47,-48,-5,92,-55,-56,106,109,-50,-57,115,-60,-61,-59,134,136,137,139,-63,-58,-62,-64,-65,]),'FOR':([0,13,14,15,17,18,24,27,32,59,80,84,91,103,108,110,113,116,120,126,128,129,131,138,140,141,142,143,],[9,-4,-46,-3,9,-49,-47,-48,-5,9,9,9,9,-50,9,-57,-60,-61,-59,9,9,9,9,-63,-58,-62,-64,-65,]),'CLE':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,45,-27,-22,45,45,45,45,45,45,-19,45,45,-24,-33,45,45,-32,-34,-31,-35,-23,-18,45,45,45,]),'ELSE':([113,116,142,143,],[117,121,-64,-65,]),'RANGE':([62,],[85,]),'CNE':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,53,-27,-22,53,53,53,53,53,53,-19,53,53,-24,-33,53,53,-32,-34,-31,-35,-23,-18,53,53,53,]),'LPAREN':([0,3,6,12,13,14,15,17,18,20,21,24,27,31,32,33,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,80,84,85,88,91,98,103,108,110,111,113,116,118,120,126,128,129,131,138,140,141,142,143,],[20,20,20,39,-4,-46,-3,20,-49,20,20,-47,-48,60,-5,39,20,20,20,20,-39,-43,20,-44,-45,20,20,20,20,-41,-40,20,-42,20,-38,20,20,20,20,98,20,20,20,-50,20,-57,20,-60,-61,20,-59,20,20,20,20,-63,-58,-62,-64,-65,]),'IN':([36,],[62,]),'CLT':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,56,-27,-22,56,56,56,56,56,56,-19,56,56,-24,-33,56,56,-32,-34,-31,-35,-23,-18,56,56,56,]),'IF':([0,13,14,15,17,18,24,27,32,59,80,84,91,103,108,110,113,116,120,126,128,129,131,138,140,141,142,143,],[21,-4,-46,-3,21,-49,-47,-48,-5,21,21,21,21,-50,21,-57,-60,-61,-59,21,21,21,21,-63,-58,-62,-64,-65,]),'AND':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,44,-27,-22,44,44,44,44,44,44,-19,44,44,-24,-33,44,44,-32,-34,-31,-35,-23,-18,44,44,44,]),'MUL_OP':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,46,-27,-22,46,46,46,46,46,46,-19,46,46,-24,-33,46,46,46,-34,46,-35,-23,-18,46,46,46,]),'FALSE':([0,3,6,13,14,15,17,18,20,21,24,27,32,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,80,84,88,91,98,103,108,110,111,113,116,118,120,126,128,129,131,138,140,141,142,143,],[23,23,23,-4,-46,-3,23,-49,23,23,-47,-48,-5,23,23,23,23,-39,-43,23,-44,-45,23,23,23,23,-41,-40,23,-42,23,-38,23,23,23,23,23,23,23,-50,23,-57,23,-60,-61,23,-59,23,23,23,23,-63,-58,-62,-64,-65,]),'DOUBLE':([0,3,6,13,14,15,17,18,20,21,24,27,32,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,80,84,88,91,98,103,108,110,111,113,116,118,120,126,128,129,131,138,140,141,142,143,],[29,29,29,-4,-46,-3,29,-49,29,29,-47,-48,-5,29,29,29,29,-39,-43,29,-44,-45,29,29,29,29,-41,-40,29,-42,29,-38,29,29,29,29,29,29,29,-50,29,-57,29,-60,-61,29,-59,29,29,29,29,-63,-58,-62,-64,-65,]),'SUB_OP':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,51,-27,-22,51,51,51,51,51,51,-19,51,51,-24,-33,51,51,-32,-34,-31,-35,-23,-18,51,51,51,]),'ASSIGN':([12,],[40,]),'BREAK':([0,13,14,15,17,18,24,27,32,59,80,84,91,103,108,110,113,116,120,126,128,129,131,138,140,141,142,143,],[26,-4,-46,-3,26,-49,-47,-48,-5,26,26,26,26,-50,26,-57,-60,-61,-59,26,26,26,26,-63,-58,-62,-64,-65,]),'RSBRACKET':([4,7,8,22,23,29,33,64,65,66,70,72,73,74,75,76,77,78,87,89,90,100,],[-28,-26,-29,-25,-30,-27,-22,87,-19,-20,-24,-33,-36,-37,-32,-34,-31,-35,-23,-18,101,-21,]),'CONTINUE':([0,13,14,15,17,18,24,27,32,59,80,84,91,103,108,110,113,116,120,126,128,129,131,138,140,141,142,143,],[28,-4,-46,-3,28,-49,-47,-48,-5,28,28,28,28,-50,28,-57,-60,-61,-59,28,28,28,28,-63,-58,-62,-64,-65,]),'ELSEIF':([113,142,],[118,118,]),'COMMA':([4,7,8,22,23,29,33,65,66,70,72,73,74,75,76,77,78,83,87,89,107,],[-28,-26,-29,-25,-30,-27,-22,-19,88,-24,-33,-36,-37,-32,-34,-31,-35,96,-23,-18,111,]),'MOD_OP':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,57,-27,-22,57,57,57,57,57,57,-19,57,57,-24,-33,57,57,57,-34,57,-35,-23,-18,57,57,57,]),'OR':([4,7,8,12,22,23,25,29,33,34,35,42,43,63,64,65,66,69,70,72,73,74,75,76,77,78,87,89,107,114,123,],[-28,-26,-29,-22,-25,-30,58,-27,-22,58,58,58,58,58,58,-19,58,58,-24,-33,58,58,-32,-34,-31,-35,-23,-18,58,58,58,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_def_args':([60,96,],[81,105,]),'elseif_list':([113,142,],[116,143,]),'small_stmt':([0,17,59,80,84,91,108,126,128,129,131,],[2,2,2,2,2,2,2,2,2,2,2,]),'comb_op':([25,34,35,42,43,63,64,66,69,72,73,74,75,76,77,78,107,114,123,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'boolean':([0,3,6,17,20,21,37,38,39,40,46,49,50,51,52,55,57,59,68,80,84,88,91,98,108,111,118,126,128,129,131,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'return_stmt':([0,17,59,80,84,91,108,126,128,129,131,],[5,5,5,5,5,5,5,5,5,5,5,]),'list_args':([39,68,88,],[67,90,100,]),'comp_op':([25,34,35,42,43,63,64,66,69,72,73,74,75,76,77,78,107,114,123,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'const_decl':([0,17,59,80,84,91,108,126,128,129,131,],[10,10,10,10,10,10,10,10,10,10,10,]),'program':([0,17,],[11,41,]),'compound_stmt':([0,17,59,80,84,91,108,126,128,129,131,],[13,13,13,13,13,13,13,13,13,13,13,]),'body':([59,80,84,91,108,126,128,129,131,],[79,93,97,102,112,130,132,133,135,]),'head':([1,],[30,]),'func_def':([0,17,59,80,84,91,108,126,128,129,131,],[14,14,14,14,14,14,14,14,14,14,14,]),'simple_stmt':([0,17,59,80,84,91,108,126,128,129,131,],[15,15,15,15,15,15,15,15,15,15,15,]),'assignment':([0,17,59,80,84,91,108,126,128,129,131,],[16,16,16,16,16,16,16,16,16,16,16,]),'stmt':([0,17,59,80,84,91,108,126,128,129,131,],[17,17,80,80,80,80,80,80,80,80,80,]),'for_stmt':([0,17,59,80,84,91,108,126,128,129,131,],[18,18,18,18,18,18,18,18,18,18,18,]),'loop_stmt':([0,17,59,80,84,91,108,126,128,129,131,],[19,19,19,19,19,19,19,19,19,19,19,]),'func_call':([0,3,6,17,20,21,37,38,39,40,46,49,50,51,52,55,57,59,68,80,84,88,91,98,108,111,118,126,128,129,131,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'if_stmt':([0,17,59,80,84,91,108,126,128,129,131,],[24,24,24,24,24,24,24,24,24,24,24,]),'expr':([0,3,6,17,20,21,37,38,39,40,46,49,50,51,52,55,57,59,68,80,84,88,91,98,108,111,118,126,128,129,131,],[25,34,35,25,42,43,63,64,66,69,72,73,74,75,76,77,78,25,66,25,25,66,25,107,25,114,123,25,25,25,25,]),'while_stmt':([0,17,59,80,84,91,108,126,128,129,131,],[27,27,27,27,27,27,27,27,27,27,27,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_program','./parser.py',17),
  ('program -> stmt program','program',2,'p_program','./parser.py',18),
  ('stmt -> simple_stmt','stmt',1,'p_stmt_type','./parser.py',25),
  ('stmt -> compound_stmt','stmt',1,'p_stmt_type','./parser.py',26),
  ('simple_stmt -> small_stmt END_STATEMENT','simple_stmt',2,'p_simple_stmt','./parser.py',30),
  ('small_stmt -> assignment','small_stmt',1,'p_small_stmt','./parser.py',34),
  ('small_stmt -> const_decl','small_stmt',1,'p_small_stmt','./parser.py',35),
  ('small_stmt -> expr','small_stmt',1,'p_small_stmt','./parser.py',36),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','./parser.py',37),
  ('small_stmt -> loop_stmt','small_stmt',1,'p_small_stmt','./parser.py',38),
  ('return_stmt -> RETURN','return_stmt',1,'p_','./parser.py',42),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_','./parser.py',43),
  ('loop_stmt -> BREAK','loop_stmt',1,'p_break','./parser.py',50),
  ('loop_stmt -> CONTINUE','loop_stmt',1,'p_continue','./parser.py',54),
  ('assignment -> IDENTIFIER ASSIGN expr','assignment',3,'p_assign','./parser.py',58),
  ('assignment -> IDENTIFIER ASSIGN LSBRACKET list_args RSBRACKET','assignment',5,'p_assign','./parser.py',59),
  ('const_decl -> IDENTIFIER CONST expr','const_decl',3,'p_const','./parser.py',66),
  ('func_call -> IDENTIFIER LPAREN list_args RPAREN','func_call',4,'p_func_call','./parser.py',71),
  ('func_call -> IDENTIFIER LPAREN RPAREN','func_call',3,'p_func_call','./parser.py',72),
  ('list_args -> expr','list_args',1,'p_list_args','./parser.py',79),
  ('list_args -> expr COMMA list_args','list_args',3,'p_list_args','./parser.py',80),
  ('expr -> IDENTIFIER','expr',1,'p_expr_id','./parser.py',88),
  ('expr -> IDENTIFIER LSBRACKET expr RSBRACKET','expr',4,'p_expr_id','./parser.py',89),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','./parser.py',96),
  ('expr -> func_call','expr',1,'p_expr','./parser.py',97),
  ('expr -> INTEGER','expr',1,'p_expr_num','./parser.py',104),
  ('expr -> DOUBLE','expr',1,'p_expr_num','./parser.py',105),
  ('expr -> boolean','expr',1,'p_expr_bool','./parser.py',109),
  ('boolean -> TRUE','boolean',1,'p_true','./parser.py',113),
  ('boolean -> FALSE','boolean',1,'p_false','./parser.py',117),
  ('expr -> expr ADD_OP expr','expr',3,'p_op','./parser.py',121),
  ('expr -> expr SUB_OP expr','expr',3,'p_op','./parser.py',122),
  ('expr -> expr MUL_OP expr','expr',3,'p_op','./parser.py',123),
  ('expr -> expr DIV_OP expr','expr',3,'p_op','./parser.py',124),
  ('expr -> expr MOD_OP expr','expr',3,'p_op','./parser.py',125),
  ('expr -> expr comb_op expr','expr',3,'p_op','./parser.py',126),
  ('expr -> expr comp_op expr','expr',3,'p_op','./parser.py',127),
  ('comb_op -> OR','comb_op',1,'p_comb_op','./parser.py',131),
  ('comb_op -> AND','comb_op',1,'p_comb_op','./parser.py',132),
  ('comp_op -> CEQ','comp_op',1,'p_comp_op','./parser.py',136),
  ('comp_op -> CNE','comp_op',1,'p_comp_op','./parser.py',137),
  ('comp_op -> CLT','comp_op',1,'p_comp_op','./parser.py',138),
  ('comp_op -> CLE','comp_op',1,'p_comp_op','./parser.py',139),
  ('comp_op -> CGT','comp_op',1,'p_comp_op','./parser.py',140),
  ('comp_op -> CGE','comp_op',1,'p_comp_op','./parser.py',141),
  ('compound_stmt -> func_def','compound_stmt',1,'p_compound_stmt','./parser.py',145),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','./parser.py',146),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','./parser.py',147),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','./parser.py',148),
  ('func_def -> FUNCTION head END_STATEMENT body END END_STATEMENT','func_def',6,'p_func_def','./parser.py',152),
  ('head -> IDENTIFIER LPAREN func_def_args RPAREN COLON','head',5,'p_head','./parser.py',156),
  ('head -> IDENTIFIER LPAREN RPAREN COLON','head',4,'p_head','./parser.py',157),
  ('func_def_args -> IDENTIFIER','func_def_args',1,'p_func_def_args','./parser.py',164),
  ('func_def_args -> IDENTIFIER COMMA func_def_args','func_def_args',3,'p_func_def_args','./parser.py',165),
  ('body -> stmt','body',1,'p_body','./parser.py',172),
  ('body -> stmt body','body',2,'p_body','./parser.py',173),
  ('while_stmt -> WHILE expr COLON END_STATEMENT body END END_STATEMENT','while_stmt',7,'p_while','./parser.py',180),
  ('for_stmt -> FOR IDENTIFIER IN RANGE LPAREN expr COMMA expr RPAREN COLON END_STATEMENT body END END_STATEMENT','for_stmt',14,'p_for','./parser.py',185),
  ('for_stmt -> FOR IDENTIFIER IN IDENTIFIER COLON END_STATEMENT body END END_STATEMENT','for_stmt',9,'p_for','./parser.py',186),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT','if_stmt',7,'p_if','./parser.py',197),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT elseif_list','if_stmt',8,'p_if','./parser.py',198),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT elseif_list ELSE COLON END_STATEMENT body END END_STATEMENT','if_stmt',14,'p_if','./parser.py',199),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT ELSE COLON END_STATEMENT body END END_STATEMENT','if_stmt',13,'p_if','./parser.py',200),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT body END END_STATEMENT','elseif_list',7,'p_elseif','./parser.py',211),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT body END END_STATEMENT elseif_list','elseif_list',8,'p_elseif','./parser.py',212),
]
