
# generated\parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'j\x80\xa0\xb9\xc8\xb8\xc1{Y\xa4/\x8co\xba\x90\xf2'
    
_lr_action_items = {'END_STATEMENT':([2,4,5,6,7,8,10,12,16,19,22,23,25,26,28,29,30,33,35,60,62,63,66,67,68,69,70,71,72,73,74,75,85,87,90,94,98,100,103,109,116,118,119,121,128,130,131,133,],[32,-26,-9,-11,-24,-27,-7,-21,-6,-10,-23,-28,-8,-13,-14,-25,58,-21,-12,81,-16,-18,-15,-22,86,-31,-34,-35,-30,-32,-29,-33,-17,97,-50,102,-49,104,107,114,120,122,123,125,132,134,135,136,]),'RETURN':([0,13,14,15,17,18,24,27,32,58,77,81,86,97,102,104,107,110,114,120,122,123,125,132,134,135,136,137,],[6,-4,-44,-3,6,-47,-45,-46,-5,6,6,6,6,-48,6,-55,-58,-59,-57,6,6,6,6,-61,-56,-60,-62,-63,]),'DIV_OP':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,51,-25,-21,51,51,51,51,51,-18,51,51,-22,-31,51,51,51,-32,51,-33,-17,51,51,51,]),'WHILE':([0,13,14,15,17,18,24,27,32,58,77,81,86,97,102,104,107,110,114,120,122,123,125,132,134,135,136,137,],[3,-4,-44,-3,3,-47,-45,-46,-5,3,3,3,3,-48,3,-55,-58,-59,-57,3,3,3,3,-61,-56,-60,-62,-63,]),'COLON':([4,7,8,22,23,29,33,34,42,63,67,69,70,71,72,73,74,75,79,83,85,89,111,113,115,117,],[-26,-24,-27,-23,-28,-25,-21,60,68,-18,-22,-31,-34,-35,-30,-32,-29,-33,90,94,-17,98,116,118,119,121,]),'CONST':([12,],[37,]),'TRUE':([0,3,6,13,14,15,17,18,20,21,24,27,32,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,77,81,84,86,93,97,102,104,105,107,110,112,114,120,122,123,125,132,134,135,136,137,],[8,8,8,-4,-44,-3,8,-47,8,8,-45,-46,-5,8,8,8,-37,-41,8,-42,-43,8,8,8,8,-39,-38,8,-40,8,-36,8,8,8,8,8,8,-48,8,-55,8,-58,-59,8,-57,8,8,8,8,-61,-56,-60,-62,-63,]),'RPAREN':([4,7,8,22,23,29,33,38,41,59,63,64,65,67,69,70,71,72,73,74,75,78,80,85,95,99,108,],[-26,-24,-27,-23,-28,-25,-21,63,67,79,-18,-19,85,-22,-31,-34,-35,-30,-32,-29,-33,89,-51,-17,-20,-52,113,]),'CGE':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,47,-25,-21,47,47,47,47,47,-18,47,47,-22,-31,47,47,-30,-32,-29,-33,-17,47,47,47,]),'COMMA':([4,7,8,22,23,29,33,63,64,67,69,70,71,72,73,74,75,80,85,101,],[-26,-24,-27,-23,-28,-25,-21,-18,84,-22,-31,-34,-35,-30,-32,-29,-33,91,-17,105,]),'CEQ':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,53,-25,-21,53,53,53,53,53,-18,53,53,-22,-31,53,53,-30,-32,-29,-33,-17,53,53,53,]),'ADD_OP':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,54,-25,-21,54,54,54,54,54,-18,54,54,-22,-31,54,54,-30,-32,-29,-33,-17,54,54,54,]),'INTEGER':([0,3,6,13,14,15,17,18,20,21,24,27,32,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,77,81,84,86,93,97,102,104,105,107,110,112,114,120,122,123,125,132,134,135,136,137,],[7,7,7,-4,-44,-3,7,-47,7,7,-45,-46,-5,7,7,7,-37,-41,7,-42,-43,7,7,7,7,-39,-38,7,-40,7,-36,7,7,7,7,7,7,-48,7,-55,7,-58,-59,7,-57,7,7,7,7,-61,-56,-60,-62,-63,]),'IDENTIFIER':([0,1,3,6,9,13,14,15,17,18,20,21,24,27,32,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,77,81,84,86,91,93,97,102,104,105,107,110,112,114,120,122,123,125,132,134,135,136,137,],[12,31,33,33,36,-4,-44,-3,12,-47,33,33,-45,-46,-5,33,33,33,-37,-41,33,-42,-43,33,33,33,33,-39,-38,33,-40,33,-36,12,80,83,12,12,33,12,80,33,-48,12,-55,33,-58,-59,33,-57,12,12,12,12,-61,-56,-60,-62,-63,]),'CGT':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,46,-25,-21,46,46,46,46,46,-18,46,46,-22,-31,46,46,-30,-32,-29,-33,-17,46,46,46,]),'$end':([11,13,14,15,17,18,24,27,32,40,97,104,107,110,114,132,134,135,136,137,],[0,-4,-44,-3,-1,-47,-45,-46,-5,-2,-48,-55,-58,-59,-57,-61,-56,-60,-62,-63,]),'FUNCTION':([0,13,14,15,17,18,24,27,32,58,77,81,86,97,102,104,107,110,114,120,122,123,125,132,134,135,136,137,],[1,-4,-44,-3,1,-47,-45,-46,-5,1,1,1,1,-48,1,-55,-58,-59,-57,1,1,1,1,-61,-56,-60,-62,-63,]),'END':([13,14,15,18,24,27,32,76,77,88,92,96,97,104,106,107,110,114,124,126,127,129,132,134,135,136,137,],[-4,-44,-3,-47,-45,-46,-5,87,-53,-54,100,103,-48,-55,109,-58,-59,-57,128,130,131,133,-61,-56,-60,-62,-63,]),'FOR':([0,13,14,15,17,18,24,27,32,58,77,81,86,97,102,104,107,110,114,120,122,123,125,132,134,135,136,137,],[9,-4,-44,-3,9,-47,-45,-46,-5,9,9,9,9,-48,9,-55,-58,-59,-57,9,9,9,9,-61,-56,-60,-62,-63,]),'CLE':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,44,-25,-21,44,44,44,44,44,-18,44,44,-22,-31,44,44,-30,-32,-29,-33,-17,44,44,44,]),'ELSE':([107,110,136,137,],[111,115,-62,-63,]),'RANGE':([61,],[82,]),'CNE':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,52,-25,-21,52,52,52,52,52,-18,52,52,-22,-31,52,52,-30,-32,-29,-33,-17,52,52,52,]),'LPAREN':([0,3,6,12,13,14,15,17,18,20,21,24,27,31,32,33,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,77,81,82,84,86,93,97,102,104,105,107,110,112,114,120,122,123,125,132,134,135,136,137,],[20,20,20,38,-4,-44,-3,20,-47,20,20,-45,-46,59,-5,38,20,20,20,-37,-41,20,-42,-43,20,20,20,20,-39,-38,20,-40,20,-36,20,20,20,93,20,20,20,-48,20,-55,20,-58,-59,20,-57,20,20,20,20,-61,-56,-60,-62,-63,]),'IN':([36,],[61,]),'CLT':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,55,-25,-21,55,55,55,55,55,-18,55,55,-22,-31,55,55,-30,-32,-29,-33,-17,55,55,55,]),'IF':([0,13,14,15,17,18,24,27,32,58,77,81,86,97,102,104,107,110,114,120,122,123,125,132,134,135,136,137,],[21,-4,-44,-3,21,-47,-45,-46,-5,21,21,21,21,-48,21,-55,-58,-59,-57,21,21,21,21,-61,-56,-60,-62,-63,]),'AND':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,43,-25,-21,43,43,43,43,43,-18,43,43,-22,-31,43,43,-30,-32,-29,-33,-17,43,43,43,]),'MUL_OP':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,45,-25,-21,45,45,45,45,45,-18,45,45,-22,-31,45,45,45,-32,45,-33,-17,45,45,45,]),'FALSE':([0,3,6,13,14,15,17,18,20,21,24,27,32,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,77,81,84,86,93,97,102,104,105,107,110,112,114,120,122,123,125,132,134,135,136,137,],[23,23,23,-4,-44,-3,23,-47,23,23,-45,-46,-5,23,23,23,-37,-41,23,-42,-43,23,23,23,23,-39,-38,23,-40,23,-36,23,23,23,23,23,23,-48,23,-55,23,-58,-59,23,-57,23,23,23,23,-61,-56,-60,-62,-63,]),'DOUBLE':([0,3,6,13,14,15,17,18,20,21,24,27,32,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,77,81,84,86,93,97,102,104,105,107,110,112,114,120,122,123,125,132,134,135,136,137,],[29,29,29,-4,-44,-3,29,-47,29,29,-45,-46,-5,29,29,29,-37,-41,29,-42,-43,29,29,29,29,-39,-38,29,-40,29,-36,29,29,29,29,29,29,-48,29,-55,29,-58,-59,29,-57,29,29,29,29,-61,-56,-60,-62,-63,]),'SUB_OP':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,50,-25,-21,50,50,50,50,50,-18,50,50,-22,-31,50,50,-30,-32,-29,-33,-17,50,50,50,]),'ASSIGN':([12,],[39,]),'BREAK':([0,13,14,15,17,18,24,27,32,58,77,81,86,97,102,104,107,110,114,120,122,123,125,132,134,135,136,137,],[26,-4,-44,-3,26,-47,-45,-46,-5,26,26,26,26,-48,26,-55,-58,-59,-57,26,26,26,26,-61,-56,-60,-62,-63,]),'CONTINUE':([0,13,14,15,17,18,24,27,32,58,77,81,86,97,102,104,107,110,114,120,122,123,125,132,134,135,136,137,],[28,-4,-44,-3,28,-47,-45,-46,-5,28,28,28,28,-48,28,-55,-58,-59,-57,28,28,28,28,-61,-56,-60,-62,-63,]),'ELSEIF':([107,136,],[112,112,]),'MOD_OP':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,56,-25,-21,56,56,56,56,56,-18,56,56,-22,-31,56,56,56,-32,56,-33,-17,56,56,56,]),'OR':([4,7,8,12,22,23,25,29,33,34,35,41,42,62,63,64,66,67,69,70,71,72,73,74,75,85,101,108,117,],[-26,-24,-27,-21,-23,-28,57,-25,-21,57,57,57,57,57,-18,57,57,-22,-31,57,57,-30,-32,-29,-33,-17,57,57,57,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_def_args':([59,91,],[78,99,]),'elseif_list':([107,136,],[110,137,]),'small_stmt':([0,17,58,77,81,86,102,120,122,123,125,],[2,2,2,2,2,2,2,2,2,2,2,]),'comb_op':([25,34,35,41,42,62,64,66,69,70,71,72,73,74,75,101,108,117,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'boolean':([0,3,6,17,20,21,37,38,39,45,48,49,50,51,54,56,58,77,81,84,86,93,102,105,112,120,122,123,125,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'return_stmt':([0,17,58,77,81,86,102,120,122,123,125,],[5,5,5,5,5,5,5,5,5,5,5,]),'comp_op':([25,34,35,41,42,62,64,66,69,70,71,72,73,74,75,101,108,117,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'const_decl':([0,17,58,77,81,86,102,120,122,123,125,],[10,10,10,10,10,10,10,10,10,10,10,]),'program':([0,17,],[11,40,]),'compound_stmt':([0,17,58,77,81,86,102,120,122,123,125,],[13,13,13,13,13,13,13,13,13,13,13,]),'body':([58,77,81,86,102,120,122,123,125,],[76,88,92,96,106,124,126,127,129,]),'head':([1,],[30,]),'func_def':([0,17,58,77,81,86,102,120,122,123,125,],[14,14,14,14,14,14,14,14,14,14,14,]),'simple_stmt':([0,17,58,77,81,86,102,120,122,123,125,],[15,15,15,15,15,15,15,15,15,15,15,]),'assignment':([0,17,58,77,81,86,102,120,122,123,125,],[16,16,16,16,16,16,16,16,16,16,16,]),'stmt':([0,17,58,77,81,86,102,120,122,123,125,],[17,17,77,77,77,77,77,77,77,77,77,]),'for_stmt':([0,17,58,77,81,86,102,120,122,123,125,],[18,18,18,18,18,18,18,18,18,18,18,]),'loop_stmt':([0,17,58,77,81,86,102,120,122,123,125,],[19,19,19,19,19,19,19,19,19,19,19,]),'func_call':([0,3,6,17,20,21,37,38,39,45,48,49,50,51,54,56,58,77,81,84,86,93,102,105,112,120,122,123,125,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'if_stmt':([0,17,58,77,81,86,102,120,122,123,125,],[24,24,24,24,24,24,24,24,24,24,24,]),'expr':([0,3,6,17,20,21,37,38,39,45,48,49,50,51,54,56,58,77,81,84,86,93,102,105,112,120,122,123,125,],[25,34,35,25,41,42,62,64,66,69,70,71,72,73,74,75,25,25,25,64,25,101,25,108,117,25,25,25,25,]),'while_stmt':([0,17,58,77,81,86,102,120,122,123,125,],[27,27,27,27,27,27,27,27,27,27,27,]),'call_args':([38,84,],[65,95,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_program','./parser.py',17),
  ('program -> stmt program','program',2,'p_program','./parser.py',18),
  ('stmt -> simple_stmt','stmt',1,'p_stmt_type','./parser.py',25),
  ('stmt -> compound_stmt','stmt',1,'p_stmt_type','./parser.py',26),
  ('simple_stmt -> small_stmt END_STATEMENT','simple_stmt',2,'p_simple_stmt','./parser.py',30),
  ('small_stmt -> assignment','small_stmt',1,'p_small_stmt','./parser.py',34),
  ('small_stmt -> const_decl','small_stmt',1,'p_small_stmt','./parser.py',35),
  ('small_stmt -> expr','small_stmt',1,'p_small_stmt','./parser.py',36),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','./parser.py',37),
  ('small_stmt -> loop_stmt','small_stmt',1,'p_small_stmt','./parser.py',38),
  ('return_stmt -> RETURN','return_stmt',1,'p_','./parser.py',42),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_','./parser.py',43),
  ('loop_stmt -> BREAK','loop_stmt',1,'p_break','./parser.py',50),
  ('loop_stmt -> CONTINUE','loop_stmt',1,'p_continue','./parser.py',54),
  ('assignment -> IDENTIFIER ASSIGN expr','assignment',3,'p_assign','./parser.py',58),
  ('const_decl -> IDENTIFIER CONST expr','const_decl',3,'p_const','./parser.py',63),
  ('func_call -> IDENTIFIER LPAREN call_args RPAREN','func_call',4,'p_func_call','./parser.py',68),
  ('func_call -> IDENTIFIER LPAREN RPAREN','func_call',3,'p_func_call','./parser.py',69),
  ('call_args -> expr','call_args',1,'p_call_args','./parser.py',76),
  ('call_args -> expr COMMA call_args','call_args',3,'p_call_args','./parser.py',77),
  ('expr -> IDENTIFIER','expr',1,'p_expr_id','./parser.py',85),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','./parser.py',89),
  ('expr -> func_call','expr',1,'p_expr','./parser.py',90),
  ('expr -> INTEGER','expr',1,'p_expr_num','./parser.py',97),
  ('expr -> DOUBLE','expr',1,'p_expr_num','./parser.py',98),
  ('expr -> boolean','expr',1,'p_expr_bool','./parser.py',102),
  ('boolean -> TRUE','boolean',1,'p_true','./parser.py',106),
  ('boolean -> FALSE','boolean',1,'p_false','./parser.py',110),
  ('expr -> expr ADD_OP expr','expr',3,'p_op','./parser.py',114),
  ('expr -> expr SUB_OP expr','expr',3,'p_op','./parser.py',115),
  ('expr -> expr MUL_OP expr','expr',3,'p_op','./parser.py',116),
  ('expr -> expr DIV_OP expr','expr',3,'p_op','./parser.py',117),
  ('expr -> expr MOD_OP expr','expr',3,'p_op','./parser.py',118),
  ('expr -> expr comb_op expr','expr',3,'p_op','./parser.py',119),
  ('expr -> expr comp_op expr','expr',3,'p_op','./parser.py',120),
  ('comb_op -> OR','comb_op',1,'p_comb_op','./parser.py',124),
  ('comb_op -> AND','comb_op',1,'p_comb_op','./parser.py',125),
  ('comp_op -> CEQ','comp_op',1,'p_comp_op','./parser.py',129),
  ('comp_op -> CNE','comp_op',1,'p_comp_op','./parser.py',130),
  ('comp_op -> CLT','comp_op',1,'p_comp_op','./parser.py',131),
  ('comp_op -> CLE','comp_op',1,'p_comp_op','./parser.py',132),
  ('comp_op -> CGT','comp_op',1,'p_comp_op','./parser.py',133),
  ('comp_op -> CGE','comp_op',1,'p_comp_op','./parser.py',134),
  ('compound_stmt -> func_def','compound_stmt',1,'p_compound_stmt','./parser.py',138),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','./parser.py',139),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','./parser.py',140),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','./parser.py',141),
  ('func_def -> FUNCTION head END_STATEMENT body END END_STATEMENT','func_def',6,'p_func_def','./parser.py',145),
  ('head -> IDENTIFIER LPAREN func_def_args RPAREN COLON','head',5,'p_head','./parser.py',149),
  ('head -> IDENTIFIER LPAREN RPAREN COLON','head',4,'p_head','./parser.py',150),
  ('func_def_args -> IDENTIFIER','func_def_args',1,'p_func_def_args','./parser.py',157),
  ('func_def_args -> IDENTIFIER COMMA func_def_args','func_def_args',3,'p_func_def_args','./parser.py',158),
  ('body -> stmt','body',1,'p_body','./parser.py',165),
  ('body -> stmt body','body',2,'p_body','./parser.py',166),
  ('while_stmt -> WHILE expr COLON END_STATEMENT body END END_STATEMENT','while_stmt',7,'p_while','./parser.py',173),
  ('for_stmt -> FOR IDENTIFIER IN RANGE LPAREN expr COMMA expr RPAREN COLON END_STATEMENT body END END_STATEMENT','for_stmt',14,'p_for','./parser.py',178),
  ('for_stmt -> FOR IDENTIFIER IN IDENTIFIER COLON END_STATEMENT body END END_STATEMENT','for_stmt',9,'p_for','./parser.py',179),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT','if_stmt',7,'p_if','./parser.py',190),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT elseif_list','if_stmt',8,'p_if','./parser.py',191),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT elseif_list ELSE COLON END_STATEMENT body END END_STATEMENT','if_stmt',14,'p_if','./parser.py',192),
  ('if_stmt -> IF expr COLON END_STATEMENT body END END_STATEMENT ELSE COLON END_STATEMENT body END END_STATEMENT','if_stmt',13,'p_if','./parser.py',193),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT body END END_STATEMENT','elseif_list',7,'p_elseif','./parser.py',204),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT body END END_STATEMENT elseif_list','elseif_list',8,'p_elseif','./parser.py',205),
]
