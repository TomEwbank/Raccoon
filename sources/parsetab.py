
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x90h\x8b4*X+@\xbe\\\xd3\xd6X\xc7\xcd\xb1'
    
_lr_action_items = {'DEDENT':([8,13,17,27,29,32,37,123,124,133,134,140,141,142,143,144,149,150,155,156,157,158,160,163,164,166,167,168,169,170,174,175,189,192,194,195,196,197,198,199,200,201,202,],[-51,-5,-4,-52,-54,-53,-6,142,-60,149,150,156,157,-76,-61,158,-73,-55,164,-71,-72,-62,166,169,-65,-75,174,175,-78,-66,-64,-77,194,197,-74,199,200,-68,201,-63,-67,-69,-70,]),'FUNCTION':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[24,-51,-5,24,-4,24,-52,-54,-53,-6,24,24,24,24,24,24,24,24,24,-76,24,-73,-55,24,-71,-72,-62,24,24,-65,-75,-78,-66,-64,-77,24,24,24,24,24,-74,-68,-63,-67,-69,-70,]),'RETURN':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[5,-51,-5,5,-4,5,-52,-54,-53,-6,5,5,5,5,5,5,5,5,5,-76,5,-73,-55,5,-71,-72,-62,5,5,-65,-75,-78,-66,-64,-77,5,5,5,5,5,-74,-68,-63,-67,-69,-70,]),'LSBRACKET':([12,38,42,45,],[43,69,73,79,]),'DIV_OP':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,60,-33,-27,60,60,60,60,60,-50,60,60,60,60,-24,60,60,-30,60,60,-39,60,60,60,-40,60,60,60,60,-41,60,60,-28,-23,-28,60,60,60,60,]),'WHILE':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[2,-51,-5,2,-4,2,-52,-54,-53,-6,2,2,2,2,2,2,2,2,2,-76,2,-73,-55,2,-71,-72,-62,2,2,-65,-75,-78,-66,-64,-77,2,2,2,2,2,-74,-68,-63,-67,-69,-70,]),'CONST':([12,],[42,]),'TRUE':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,120,121,124,125,127,130,139,142,147,149,150,153,156,157,158,159,161,162,164,166,169,170,172,174,175,184,187,190,191,193,194,197,199,200,201,202,],[7,7,7,-51,-5,7,-4,7,7,7,7,-52,-54,7,-53,7,-6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-76,7,-73,-55,7,-71,-72,-62,7,7,7,-65,-75,-78,-66,7,-64,-77,7,7,7,7,7,-74,-68,-63,-67,-69,-70,]),'DISPLAY':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[10,-51,-5,10,-4,10,-52,-54,-53,-6,10,10,10,10,10,10,10,10,10,-76,10,-73,-55,10,-71,-72,-62,10,10,-65,-75,-78,-66,-64,-77,10,10,10,10,10,-74,-68,-63,-67,-69,-70,]),'RPAREN':([3,6,7,15,23,26,34,38,44,50,67,72,76,77,78,84,86,89,90,91,92,93,94,95,96,97,98,99,100,101,109,116,118,122,128,154,165,],[-34,-32,-35,-29,-36,-31,-33,-27,77,84,-50,106,109,-24,-25,-30,117,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,-23,135,-58,-28,-26,-59,173,]),'CGE':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,58,-33,-27,58,58,58,58,58,-50,58,58,58,58,-24,58,58,-30,58,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,58,58,-28,-23,-28,58,58,58,58,]),'COLON':([3,6,7,15,23,26,34,38,39,53,67,77,84,89,90,91,92,93,94,95,96,97,98,99,100,101,109,113,117,122,135,171,173,176,178,],[-34,-32,-35,-29,-36,-31,-33,-27,71,87,-50,-24,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,-23,132,137,-28,152,177,180,181,183,]),'CEQ':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,62,-33,-27,62,62,62,62,62,-50,62,62,62,62,-24,62,62,-30,62,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,62,62,-28,-23,-28,62,62,62,62,]),'ADD_OP':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,63,-33,-27,63,63,63,63,63,-50,63,63,63,63,-24,63,63,-30,63,63,-39,63,63,-38,-40,63,63,-37,63,-41,63,63,-28,-23,-28,63,63,63,63,]),'INTEGER':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,120,121,124,125,127,130,139,142,147,149,150,153,156,157,158,159,161,162,164,166,169,170,172,174,175,184,187,190,191,193,194,197,199,200,201,202,],[6,6,6,-51,-5,6,-4,6,6,6,6,-52,-54,6,-53,6,-6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-76,6,-73,-55,6,-71,-72,-62,6,6,6,-65,-75,-78,-66,6,-64,-77,6,6,6,6,6,-74,-68,-63,-67,-69,-70,]),'IDENTIFIER':([0,2,5,8,13,14,16,17,19,20,22,24,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,82,86,104,110,114,115,120,121,124,125,127,130,138,139,142,147,149,150,153,156,157,158,159,161,162,164,166,169,170,172,174,175,184,187,190,191,193,194,197,199,200,201,202,],[12,38,38,-51,-5,12,47,-4,12,38,38,52,38,-52,-54,38,-53,38,-6,38,38,38,38,38,12,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,113,118,12,38,12,12,12,12,12,12,38,38,118,12,-76,12,-73,-55,12,-71,-72,-62,38,12,12,-65,-75,-78,-66,38,-64,-77,12,12,12,12,12,-74,-68,-63,-67,-69,-70,]),'CGT':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,57,-33,-27,57,57,57,57,57,-50,57,57,57,57,-24,57,57,-30,57,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,57,57,-28,-23,-28,57,57,57,57,]),'$end':([8,11,13,17,19,27,29,32,37,48,81,142,149,150,156,157,158,164,166,169,170,174,175,194,197,199,200,201,202,],[-51,0,-5,-4,-1,-52,-54,-53,-6,-2,-3,-76,-73,-55,-71,-72,-62,-65,-75,-78,-66,-64,-77,-74,-68,-63,-67,-69,-70,]),'END_STATEMENT':([0,1,3,4,5,6,7,8,9,12,13,15,17,18,19,21,23,26,27,28,29,31,32,33,34,36,37,38,39,40,46,49,51,53,67,68,71,74,77,80,84,87,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,109,113,117,122,126,129,132,135,137,142,145,149,150,152,156,157,158,164,166,169,170,173,174,175,177,180,181,183,194,197,199,200,201,202,],[14,37,-34,-10,-13,-32,-35,-51,-8,-27,-5,-29,-4,-7,14,-12,-36,-31,-52,-9,-54,-15,-53,-16,-33,-11,-6,-27,70,-14,14,83,85,88,-50,102,105,-21,-24,-18,-30,119,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,-17,-28,-23,131,136,-28,-22,-19,148,151,-57,-76,-20,-73,-55,-56,-71,-72,-62,-65,-75,-78,-66,179,-64,-77,182,185,186,188,-74,-68,-63,-67,-69,-70,]),'STRING':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,120,121,124,125,127,130,139,142,147,149,150,153,156,157,158,159,161,162,164,166,169,170,172,174,175,184,187,190,191,193,194,197,199,200,201,202,],[15,15,15,-51,-5,15,-4,15,15,15,15,-52,-54,15,-53,15,-6,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-76,15,-73,-55,15,-71,-72,-62,15,15,15,-65,-75,-78,-66,15,-64,-77,15,15,15,15,15,-74,-68,-63,-67,-69,-70,]),'FOR':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[16,-51,-5,16,-4,16,-52,-54,-53,-6,16,16,16,16,16,16,16,16,16,-76,16,-73,-55,16,-71,-72,-62,16,16,-65,-75,-78,-66,-64,-77,16,16,16,16,16,-74,-68,-63,-67,-69,-70,]),'CLE':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,55,-33,-27,55,55,55,55,55,-50,55,55,55,55,-24,55,55,-30,55,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,55,55,-28,-23,-28,55,55,55,55,]),'ELSE':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[20,-51,-5,20,-4,20,-52,-54,-53,-6,20,20,20,20,20,20,20,20,20,-76,20,-73,-55,20,-71,-72,-62,20,20,171,-75,-78,176,-64,-77,20,20,20,20,20,-74,-68,-63,-67,-69,-70,]),'RANGE':([82,],[112,]),'CNE':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,61,-33,-27,61,61,61,61,61,-50,61,61,61,61,-24,61,61,-30,61,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,61,61,-28,-23,-28,61,61,61,61,]),'LPAREN':([0,2,5,8,10,12,13,14,17,19,20,22,25,27,29,30,32,35,37,38,41,42,43,44,45,46,52,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,112,114,115,120,121,124,125,127,130,139,142,147,149,150,153,156,157,158,159,161,162,164,166,169,170,172,174,175,184,187,190,191,193,194,197,199,200,201,202,],[22,22,22,-51,41,44,-5,22,-4,22,22,22,22,-52,-54,22,-53,22,-6,44,22,22,22,22,22,22,86,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,130,22,22,22,22,22,22,22,22,22,-76,22,-73,-55,22,-71,-72,-62,22,22,22,-65,-75,-78,-66,22,-64,-77,22,22,22,22,22,-74,-68,-63,-67,-69,-70,]),'IN':([47,],[82,]),'CLT':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,64,-33,-27,64,64,64,64,64,-50,64,64,64,64,-24,64,64,-30,64,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,64,64,-28,-23,-28,64,64,64,64,]),'INDENT':([70,83,85,88,102,105,119,131,136,148,151,179,182,185,186,188,],[104,114,115,120,121,125,139,147,153,161,162,184,187,190,191,193,]),'IF':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[25,-51,-5,25,-4,25,-52,-54,-53,-6,25,25,25,25,25,25,25,25,25,-76,25,-73,-55,25,-71,-72,-62,25,25,-65,-75,-78,-66,-64,-77,25,25,25,25,25,-74,-68,-63,-67,-69,-70,]),'AND':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,54,-33,-27,54,54,54,54,54,-50,54,54,54,54,-24,54,54,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,54,-28,-23,-28,54,54,54,54,]),'MUL_OP':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,56,-33,-27,56,56,56,56,56,-50,56,56,56,56,-24,56,56,-30,56,56,-39,56,56,56,-40,56,56,56,56,-41,56,56,-28,-23,-28,56,56,56,56,]),'FALSE':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,120,121,124,125,127,130,139,142,147,149,150,153,156,157,158,159,161,162,164,166,169,170,172,174,175,184,187,190,191,193,194,197,199,200,201,202,],[23,23,23,-51,-5,23,-4,23,23,23,23,-52,-54,23,-53,23,-6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-76,23,-73,-55,23,-71,-72,-62,23,23,23,-65,-75,-78,-66,23,-64,-77,23,23,23,23,23,-74,-68,-63,-67,-69,-70,]),'DOUBLE':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,120,121,124,125,127,130,139,142,147,149,150,153,156,157,158,159,161,162,164,166,169,170,172,174,175,184,187,190,191,193,194,197,199,200,201,202,],[34,34,34,-51,-5,34,-4,34,34,34,34,-52,-54,34,-53,34,-6,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-76,34,-73,-55,34,-71,-72,-62,34,34,34,-65,-75,-78,-66,34,-64,-77,34,34,34,34,34,-74,-68,-63,-67,-69,-70,]),'SUB_OP':([0,2,3,5,6,7,8,12,13,14,15,17,19,20,22,23,25,26,27,28,29,30,32,34,35,37,38,39,40,41,42,43,44,45,46,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,77,78,79,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,108,109,110,114,115,120,121,122,124,125,127,130,139,142,145,146,147,149,150,153,156,157,158,159,161,162,164,165,166,169,170,172,174,175,178,184,187,190,191,193,194,197,199,200,201,202,],[30,30,-34,30,-32,-35,-51,-27,-5,30,-29,-4,30,30,30,-36,30,-31,-52,59,-54,30,-53,-33,30,-6,-27,59,59,30,30,30,30,30,30,59,59,59,30,30,30,30,30,30,30,30,30,30,30,30,30,-50,59,30,59,30,59,59,-24,59,30,59,-30,59,59,-39,59,59,-38,-40,59,59,-37,59,-41,59,59,30,-28,-23,30,30,30,30,30,-28,30,30,30,30,30,-76,59,59,30,-73,-55,30,-71,-72,-62,30,30,30,-65,59,-75,-78,-66,30,-64,-77,59,30,30,30,30,30,-74,-68,-63,-67,-69,-70,]),'ASSIGN':([12,108,],[45,127,]),'BREAK':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[31,-51,-5,31,-4,31,-52,-54,-53,-6,31,31,31,31,31,31,31,31,31,-76,31,-73,-55,31,-71,-72,-62,31,31,-65,-75,-78,-66,-64,-77,31,31,31,31,31,-74,-68,-63,-67,-69,-70,]),'RSBRACKET':([3,6,7,15,23,26,34,38,67,75,77,78,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,109,111,122,128,],[-34,-32,-35,-29,-36,-31,-33,-27,-50,108,-24,-25,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,122,126,-23,129,-28,-26,]),'CONTINUE':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[33,-51,-5,33,-4,33,-52,-54,-53,-6,33,33,33,33,33,33,33,33,33,-76,33,-73,-55,33,-71,-72,-62,33,33,-65,-75,-78,-66,-64,-77,33,33,33,33,33,-74,-68,-63,-67,-69,-70,]),'ELSEIF':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,120,121,124,125,139,142,147,149,150,153,156,157,158,161,162,164,166,169,170,174,175,184,187,190,191,193,194,197,199,200,201,202,],[35,-51,-5,35,-4,35,-52,-54,-53,-6,35,35,35,35,35,35,35,35,35,-76,35,-73,-55,35,-71,-72,-62,35,35,172,-75,-78,-66,-64,-77,35,35,35,35,35,-74,-68,-63,-67,172,-70,]),'COMMA':([3,6,7,15,23,26,34,38,67,77,78,84,89,90,91,92,93,94,95,96,97,98,99,100,101,109,118,122,146,],[-34,-32,-35,-29,-36,-31,-33,-27,-50,-24,110,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,-23,138,-28,159,]),'MOD_OP':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,65,-33,-27,65,65,65,65,65,-50,65,65,65,65,-24,65,65,-30,65,65,-39,65,65,65,-40,65,65,65,65,-41,65,65,-28,-23,-28,65,65,65,65,]),'OR':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,122,145,146,165,178,],[-34,-32,-35,-27,-29,-36,-31,66,-33,-27,66,66,66,66,66,-50,66,66,66,66,-24,66,66,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,66,-28,-23,-28,66,66,66,66,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_def_args':([86,138,],[116,154,]),'elseif_list':([164,201,],[170,202,]),'small_stmt':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'boolean':([0,2,5,14,19,20,22,25,30,35,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,120,121,124,125,127,130,139,147,153,159,161,162,172,184,187,190,191,193,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'return_stmt':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'list_args':([44,73,79,110,],[76,107,111,128,]),'const_decl':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'program':([0,19,46,],[11,48,81,]),'compound_stmt':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'body':([104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[123,133,134,140,141,143,144,155,160,163,167,168,189,192,195,196,198,]),'head':([24,],[51,]),'func_def':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'simple_stmt':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'assignment':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'stmt':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[19,46,19,19,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'for_stmt':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'loop_stmt':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'func_call':([0,2,5,14,19,20,22,25,30,35,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,120,121,124,125,127,130,139,147,153,159,161,162,172,184,187,190,191,193,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_stmt':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expr':([0,2,5,14,19,20,22,25,30,35,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,120,121,124,125,127,130,139,147,153,159,161,162,172,184,187,190,191,193,],[28,39,40,28,28,49,50,53,67,68,72,74,75,78,80,28,89,90,91,92,93,94,95,96,97,98,99,100,101,103,78,78,28,78,28,28,28,28,28,28,145,146,28,28,28,165,28,28,178,28,28,28,28,28,]),'while_stmt':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'display':([0,14,19,46,104,114,115,120,121,124,125,139,147,153,161,162,184,187,190,191,193,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_stmts','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',24),
  ('program -> stmt program','program',2,'p_stmts','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',25),
  ('program -> END_STATEMENT stmt program','program',3,'p_stmts','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',26),
  ('stmt -> simple_stmt','stmt',1,'p_stmt_type','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',35),
  ('stmt -> compound_stmt','stmt',1,'p_stmt_type','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',36),
  ('simple_stmt -> small_stmt END_STATEMENT','simple_stmt',2,'p_simple_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',40),
  ('small_stmt -> assignment','small_stmt',1,'p_small_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',44),
  ('small_stmt -> const_decl','small_stmt',1,'p_small_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',45),
  ('small_stmt -> expr','small_stmt',1,'p_small_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',46),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',47),
  ('small_stmt -> display','small_stmt',1,'p_small_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',48),
  ('small_stmt -> loop_stmt','small_stmt',1,'p_small_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',49),
  ('return_stmt -> RETURN','return_stmt',1,'p_return','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',53),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',54),
  ('loop_stmt -> BREAK','loop_stmt',1,'p_break','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',61),
  ('loop_stmt -> CONTINUE','loop_stmt',1,'p_continue','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',65),
  ('display -> DISPLAY LPAREN expr RPAREN','display',4,'p_display','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',69),
  ('assignment -> IDENTIFIER ASSIGN expr','assignment',3,'p_assign','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',73),
  ('assignment -> IDENTIFIER ASSIGN LSBRACKET list_args RSBRACKET','assignment',5,'p_assign','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',74),
  ('assignment -> IDENTIFIER LSBRACKET expr RSBRACKET ASSIGN expr','assignment',6,'p_assign','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',75),
  ('const_decl -> IDENTIFIER CONST expr','const_decl',3,'p_const','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',84),
  ('const_decl -> IDENTIFIER CONST LSBRACKET list_args RSBRACKET','const_decl',5,'p_const','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',85),
  ('func_call -> IDENTIFIER LPAREN list_args RPAREN','func_call',4,'p_func_call','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',93),
  ('func_call -> IDENTIFIER LPAREN RPAREN','func_call',3,'p_func_call','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',94),
  ('list_args -> expr','list_args',1,'p_list_args','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',101),
  ('list_args -> expr COMMA list_args','list_args',3,'p_list_args','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',102),
  ('expr -> IDENTIFIER','expr',1,'p_expr_id','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',110),
  ('expr -> IDENTIFIER LSBRACKET expr RSBRACKET','expr',4,'p_expr_id','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',111),
  ('expr -> STRING','expr',1,'p_expr_string','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',118),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',122),
  ('expr -> func_call','expr',1,'p_expr','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',123),
  ('expr -> INTEGER','expr',1,'p_expr_int','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',130),
  ('expr -> DOUBLE','expr',1,'p_expr_double','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',134),
  ('expr -> boolean','expr',1,'p_expr_bool','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',138),
  ('boolean -> TRUE','boolean',1,'p_true','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',142),
  ('boolean -> FALSE','boolean',1,'p_false','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',146),
  ('expr -> expr ADD_OP expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',150),
  ('expr -> expr SUB_OP expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',151),
  ('expr -> expr MUL_OP expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',152),
  ('expr -> expr DIV_OP expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',153),
  ('expr -> expr MOD_OP expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',154),
  ('expr -> expr OR expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',155),
  ('expr -> expr AND expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',156),
  ('expr -> expr CEQ expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',157),
  ('expr -> expr CNE expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',158),
  ('expr -> expr CLT expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',159),
  ('expr -> expr CLE expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',160),
  ('expr -> expr CGT expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',161),
  ('expr -> expr CGE expr','expr',3,'p_op','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',162),
  ('expr -> SUB_OP expr','expr',2,'p_expr_signed','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',166),
  ('compound_stmt -> func_def','compound_stmt',1,'p_compound_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',170),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',171),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',172),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',173),
  ('func_def -> FUNCTION head END_STATEMENT INDENT body DEDENT','func_def',6,'p_func_def','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',177),
  ('head -> IDENTIFIER LPAREN func_def_args RPAREN COLON','head',5,'p_head','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',181),
  ('head -> IDENTIFIER LPAREN RPAREN COLON','head',4,'p_head','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',182),
  ('func_def_args -> IDENTIFIER','func_def_args',1,'p_func_def_args','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',189),
  ('func_def_args -> IDENTIFIER COMMA func_def_args','func_def_args',3,'p_func_def_args','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',190),
  ('body -> stmt','body',1,'p_body','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',197),
  ('body -> stmt body','body',2,'p_body','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',198),
  ('while_stmt -> WHILE expr COLON END_STATEMENT INDENT body DEDENT','while_stmt',7,'p_while','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',205),
  ('for_stmt -> FOR IDENTIFIER IN RANGE LPAREN expr COMMA expr RPAREN COLON END_STATEMENT INDENT body DEDENT','for_stmt',14,'p_for','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',210),
  ('for_stmt -> FOR IDENTIFIER IN IDENTIFIER COLON END_STATEMENT INDENT body DEDENT','for_stmt',9,'p_for','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',211),
  ('if_stmt -> IF expr COLON END_STATEMENT INDENT body DEDENT','if_stmt',7,'p_if','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',222),
  ('if_stmt -> IF expr COLON END_STATEMENT INDENT body DEDENT elseif_list','if_stmt',8,'p_if','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',223),
  ('if_stmt -> IF expr COLON END_STATEMENT INDENT body DEDENT elseif_list ELSE COLON END_STATEMENT INDENT body DEDENT','if_stmt',14,'p_if','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',224),
  ('if_stmt -> IF expr COLON END_STATEMENT INDENT body DEDENT ELSE COLON END_STATEMENT INDENT body DEDENT','if_stmt',13,'p_if','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',225),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT INDENT body DEDENT','elseif_list',7,'p_elseif','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',236),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT INDENT body DEDENT elseif_list','elseif_list',8,'p_elseif','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',237),
  ('stmt -> IF expr END_STATEMENT INDENT body DEDENT','stmt',6,'p_colon_forgotten','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',246),
  ('stmt -> ELSEIF expr END_STATEMENT INDENT body DEDENT','stmt',6,'p_colon_forgotten','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',247),
  ('stmt -> ELSE expr END_STATEMENT INDENT body DEDENT','stmt',6,'p_colon_forgotten','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',248),
  ('stmt -> FOR IDENTIFIER IN RANGE LPAREN expr COMMA expr RPAREN END_STATEMENT INDENT body DEDENT','stmt',13,'p_colon_forgotten','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',249),
  ('stmt -> FOR IDENTIFIER IN IDENTIFIER END_STATEMENT INDENT body DEDENT','stmt',8,'p_colon_forgotten','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',250),
  ('stmt -> WHILE expr END_STATEMENT INDENT body DEDENT','stmt',6,'p_colon_forgotten','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',251),
  ('stmt -> FUNCTION IDENTIFIER LPAREN func_def_args RPAREN END_STATEMENT INDENT body DEDENT','stmt',9,'p_colon_forgotten','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',252),
  ('stmt -> FUNCTION IDENTIFIER LPAREN RPAREN END_STATEMENT INDENT body DEDENT','stmt',8,'p_colon_forgotten','D:\\Unif\\1er master\\compilers\\Raccoon\\sources\\parsing.py',253),
]
