
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x14\x01\xa7\x01\xe1\x1d\x08{\x95\x1f\x7f\xb2\xc0\x04l.'
    
_lr_action_items = {'DEDENT':([8,13,17,27,29,32,37,131,132,141,142,156,157,158,159,160,165,166,171,172,173,174,176,179,180,182,183,184,185,186,190,191,205,208,210,211,212,213,214,215,216,217,218,],[-51,-5,-4,-52,-54,-53,-6,158,-68,165,166,172,173,-84,-69,174,-81,-55,180,-79,-80,-70,182,185,-73,-83,190,191,-86,-74,-72,-85,210,213,-82,215,216,-76,217,-71,-75,-77,-78,]),'FUNCTION':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[24,-51,-5,24,-4,24,-52,-54,-53,-6,24,24,24,24,24,24,24,24,24,-84,24,-81,-55,24,-79,-80,-70,24,24,-73,-83,-86,-74,-72,-85,24,24,24,24,24,-82,-76,-71,-75,-77,-78,]),'T_STRING':([86,149,],[116,116,]),'RETURN':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[5,-51,-5,5,-4,5,-52,-54,-53,-6,5,5,5,5,5,5,5,5,5,-84,5,-81,-55,5,-79,-80,-70,5,5,-73,-83,-86,-74,-72,-85,5,5,5,5,5,-82,-76,-71,-75,-77,-78,]),'T_LIST_DOUBLE':([86,149,],[125,125,]),'LSBRACKET':([12,38,42,45,],[43,69,73,79,]),'T_DOUBLE':([86,149,],[120,120,]),'T_LIST_BOOL':([86,149,],[123,123,]),'DIV_OP':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,60,-33,-27,60,60,60,60,60,-50,60,60,60,60,-24,60,60,-30,60,60,-39,60,60,60,-40,60,60,60,60,-41,60,60,-28,-23,-28,60,60,60,60,]),'WHILE':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[2,-51,-5,2,-4,2,-52,-54,-53,-6,2,2,2,2,2,2,2,2,2,-84,2,-81,-55,2,-79,-80,-70,2,2,-73,-83,-86,-74,-72,-85,2,2,2,2,2,-82,-76,-71,-75,-77,-78,]),'COLON':([3,6,7,15,23,26,34,38,39,53,67,77,84,89,90,91,92,93,94,95,96,97,98,99,100,101,109,113,118,130,144,187,189,192,194,],[-34,-32,-35,-29,-36,-31,-33,-27,71,87,-50,-24,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,-23,140,146,-28,168,193,196,197,199,]),'CONST':([12,],[42,]),'T_LIST_INT':([86,149,],[122,122,]),'TRUE':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,128,129,132,133,135,138,155,158,163,165,166,169,172,173,174,175,177,178,180,182,185,186,188,190,191,200,203,206,207,209,210,213,215,216,217,218,],[7,7,7,-51,-5,7,-4,7,7,7,7,-52,-54,7,-53,7,-6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-84,7,-81,-55,7,-79,-80,-70,7,7,7,-73,-83,-86,-74,7,-72,-85,7,7,7,7,7,-82,-76,-71,-75,-77,-78,]),'DISPLAY':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[10,-51,-5,10,-4,10,-52,-54,-53,-6,10,10,10,10,10,10,10,10,10,-84,10,-81,-55,10,-79,-80,-70,10,10,-73,-83,-86,-74,-72,-85,10,10,10,10,10,-82,-76,-71,-75,-77,-78,]),'T_INT':([86,149,],[124,124,]),'RPAREN':([3,6,7,15,23,26,34,38,44,50,67,72,76,77,78,84,86,89,90,91,92,93,94,95,96,97,98,99,100,101,109,117,121,130,136,143,147,148,150,151,152,153,154,170,181,],[-34,-32,-35,-29,-36,-31,-33,-27,77,84,-50,106,109,-24,-25,-30,118,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,-23,144,-58,-28,-26,-67,-62,-61,-63,-65,-60,-64,-66,-59,189,]),'CGE':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,58,-33,-27,58,58,58,58,58,-50,58,58,58,58,-24,58,58,-30,58,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,58,58,-28,-23,-28,58,58,58,58,]),'COMMA':([3,6,7,15,23,26,34,38,67,77,78,84,89,90,91,92,93,94,95,96,97,98,99,100,101,109,121,130,143,147,148,150,151,152,153,154,162,],[-34,-32,-35,-29,-36,-31,-33,-27,-50,-24,110,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,-23,149,-28,-67,-62,-61,-63,-65,-60,-64,-66,175,]),'CEQ':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,62,-33,-27,62,62,62,62,62,-50,62,62,62,62,-24,62,62,-30,62,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,62,62,-28,-23,-28,62,62,62,62,]),'ADD_OP':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,63,-33,-27,63,63,63,63,63,-50,63,63,63,63,-24,63,63,-30,63,63,-39,63,63,-38,-40,63,63,-37,63,-41,63,63,-28,-23,-28,63,63,63,63,]),'T_LIST_STRING':([86,149,],[126,126,]),'INTEGER':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,128,129,132,133,135,138,155,158,163,165,166,169,172,173,174,175,177,178,180,182,185,186,188,190,191,200,203,206,207,209,210,213,215,216,217,218,],[6,6,6,-51,-5,6,-4,6,6,6,6,-52,-54,6,-53,6,-6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-84,6,-81,-55,6,-79,-80,-70,6,6,6,-73,-83,-86,-74,6,-72,-85,6,6,6,6,6,-82,-76,-71,-75,-77,-78,]),'IDENTIFIER':([0,2,5,8,13,14,16,17,19,20,22,24,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,82,104,110,114,115,116,119,120,122,123,124,125,126,128,129,132,133,135,138,155,158,163,165,166,169,172,173,174,175,177,178,180,182,185,186,188,190,191,200,203,206,207,209,210,213,215,216,217,218,],[12,38,38,-51,-5,12,47,-4,12,38,38,52,38,-52,-54,38,-53,38,-6,38,38,38,38,38,12,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,113,12,38,12,12,143,147,148,150,151,152,153,154,12,12,12,12,38,38,12,-84,12,-81,-55,12,-79,-80,-70,38,12,12,-73,-83,-86,-74,38,-72,-85,12,12,12,12,12,-82,-76,-71,-75,-77,-78,]),'CGT':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,57,-33,-27,57,57,57,57,57,-50,57,57,57,57,-24,57,57,-30,57,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,57,57,-28,-23,-28,57,57,57,57,]),'$end':([8,11,13,17,19,27,29,32,37,48,81,158,165,166,172,173,174,180,182,185,186,190,191,210,213,215,216,217,218,],[-51,0,-5,-4,-1,-52,-54,-53,-6,-2,-3,-84,-81,-55,-79,-80,-70,-73,-83,-86,-74,-72,-85,-82,-76,-71,-75,-77,-78,]),'END_STATEMENT':([0,1,3,4,5,6,7,8,9,12,13,15,17,18,19,21,23,26,27,28,29,31,32,33,34,36,37,38,39,40,46,49,51,53,67,68,71,74,77,80,84,87,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,109,113,118,130,134,137,140,144,146,158,161,165,166,168,172,173,174,180,182,185,186,189,190,191,193,196,197,199,210,213,215,216,217,218,],[14,37,-34,-10,-13,-32,-35,-51,-8,-27,-5,-29,-4,-7,14,-12,-36,-31,-52,-9,-54,-15,-53,-16,-33,-11,-6,-27,70,-14,14,83,85,88,-50,102,105,-21,-24,-18,-30,127,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,-17,-28,-23,139,145,-28,-22,-19,164,167,-57,-84,-20,-81,-55,-56,-79,-80,-70,-73,-83,-86,-74,195,-72,-85,198,201,202,204,-82,-76,-71,-75,-77,-78,]),'STRING':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,128,129,132,133,135,138,155,158,163,165,166,169,172,173,174,175,177,178,180,182,185,186,188,190,191,200,203,206,207,209,210,213,215,216,217,218,],[15,15,15,-51,-5,15,-4,15,15,15,15,-52,-54,15,-53,15,-6,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-84,15,-81,-55,15,-79,-80,-70,15,15,15,-73,-83,-86,-74,15,-72,-85,15,15,15,15,15,-82,-76,-71,-75,-77,-78,]),'FOR':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[16,-51,-5,16,-4,16,-52,-54,-53,-6,16,16,16,16,16,16,16,16,16,-84,16,-81,-55,16,-79,-80,-70,16,16,-73,-83,-86,-74,-72,-85,16,16,16,16,16,-82,-76,-71,-75,-77,-78,]),'CLE':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,55,-33,-27,55,55,55,55,55,-50,55,55,55,55,-24,55,55,-30,55,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,55,55,-28,-23,-28,55,55,55,55,]),'ELSE':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[20,-51,-5,20,-4,20,-52,-54,-53,-6,20,20,20,20,20,20,20,20,20,-84,20,-81,-55,20,-79,-80,-70,20,20,187,-83,-86,192,-72,-85,20,20,20,20,20,-82,-76,-71,-75,-77,-78,]),'RANGE':([82,],[112,]),'CNE':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,61,-33,-27,61,61,61,61,61,-50,61,61,61,61,-24,61,61,-30,61,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,61,61,-28,-23,-28,61,61,61,61,]),'LPAREN':([0,2,5,8,10,12,13,14,17,19,20,22,25,27,29,30,32,35,37,38,41,42,43,44,45,46,52,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,112,114,115,128,129,132,133,135,138,155,158,163,165,166,169,172,173,174,175,177,178,180,182,185,186,188,190,191,200,203,206,207,209,210,213,215,216,217,218,],[22,22,22,-51,41,44,-5,22,-4,22,22,22,22,-52,-54,22,-53,22,-6,44,22,22,22,22,22,22,86,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,138,22,22,22,22,22,22,22,22,22,-84,22,-81,-55,22,-79,-80,-70,22,22,22,-73,-83,-86,-74,22,-72,-85,22,22,22,22,22,-82,-76,-71,-75,-77,-78,]),'IN':([47,],[82,]),'CLT':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,64,-33,-27,64,64,64,64,64,-50,64,64,64,64,-24,64,64,-30,64,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,64,64,-28,-23,-28,64,64,64,64,]),'INDENT':([70,83,85,88,102,105,127,139,145,164,167,195,198,201,202,204,],[104,114,115,128,129,133,155,163,169,177,178,200,203,206,207,209,]),'IF':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[25,-51,-5,25,-4,25,-52,-54,-53,-6,25,25,25,25,25,25,25,25,25,-84,25,-81,-55,25,-79,-80,-70,25,25,-73,-83,-86,-74,-72,-85,25,25,25,25,25,-82,-76,-71,-75,-77,-78,]),'AND':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,54,-33,-27,54,54,54,54,54,-50,54,54,54,54,-24,54,54,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,54,-28,-23,-28,54,54,54,54,]),'MUL_OP':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,56,-33,-27,56,56,56,56,56,-50,56,56,56,56,-24,56,56,-30,56,56,-39,56,56,56,-40,56,56,56,56,-41,56,56,-28,-23,-28,56,56,56,56,]),'FALSE':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,128,129,132,133,135,138,155,158,163,165,166,169,172,173,174,175,177,178,180,182,185,186,188,190,191,200,203,206,207,209,210,213,215,216,217,218,],[23,23,23,-51,-5,23,-4,23,23,23,23,-52,-54,23,-53,23,-6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-84,23,-81,-55,23,-79,-80,-70,23,23,23,-73,-83,-86,-74,23,-72,-85,23,23,23,23,23,-82,-76,-71,-75,-77,-78,]),'T_BOOL':([86,149,],[119,119,]),'DOUBLE':([0,2,5,8,13,14,17,19,20,22,25,27,29,30,32,35,37,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,128,129,132,133,135,138,155,158,163,165,166,169,172,173,174,175,177,178,180,182,185,186,188,190,191,200,203,206,207,209,210,213,215,216,217,218,],[34,34,34,-51,-5,34,-4,34,34,34,34,-52,-54,34,-53,34,-6,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-84,34,-81,-55,34,-79,-80,-70,34,34,34,-73,-83,-86,-74,34,-72,-85,34,34,34,34,34,-82,-76,-71,-75,-77,-78,]),'SUB_OP':([0,2,3,5,6,7,8,12,13,14,15,17,19,20,22,23,25,26,27,28,29,30,32,34,35,37,38,39,40,41,42,43,44,45,46,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,77,78,79,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,108,109,110,114,115,128,129,130,132,133,135,138,155,158,161,162,163,165,166,169,172,173,174,175,177,178,180,181,182,185,186,188,190,191,194,200,203,206,207,209,210,213,215,216,217,218,],[30,30,-34,30,-32,-35,-51,-27,-5,30,-29,-4,30,30,30,-36,30,-31,-52,59,-54,30,-53,-33,30,-6,-27,59,59,30,30,30,30,30,30,59,59,59,30,30,30,30,30,30,30,30,30,30,30,30,30,-50,59,30,59,30,59,59,-24,59,30,59,-30,59,59,-39,59,59,-38,-40,59,59,-37,59,-41,59,59,30,-28,-23,30,30,30,30,30,-28,30,30,30,30,30,-84,59,59,30,-81,-55,30,-79,-80,-70,30,30,30,-73,59,-83,-86,-74,30,-72,-85,59,30,30,30,30,30,-82,-76,-71,-75,-77,-78,]),'ASSIGN':([12,108,],[45,135,]),'BREAK':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[31,-51,-5,31,-4,31,-52,-54,-53,-6,31,31,31,31,31,31,31,31,31,-84,31,-81,-55,31,-79,-80,-70,31,31,-73,-83,-86,-74,-72,-85,31,31,31,31,31,-82,-76,-71,-75,-77,-78,]),'RSBRACKET':([3,6,7,15,23,26,34,38,67,75,77,78,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,109,111,130,136,],[-34,-32,-35,-29,-36,-31,-33,-27,-50,108,-24,-25,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,130,134,-23,137,-28,-26,]),'CONTINUE':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[33,-51,-5,33,-4,33,-52,-54,-53,-6,33,33,33,33,33,33,33,33,33,-84,33,-81,-55,33,-79,-80,-70,33,33,-73,-83,-86,-74,-72,-85,33,33,33,33,33,-82,-76,-71,-75,-77,-78,]),'ELSEIF':([0,8,13,14,17,19,27,29,32,37,46,104,114,115,128,129,132,133,155,158,163,165,166,169,172,173,174,177,178,180,182,185,186,190,191,200,203,206,207,209,210,213,215,216,217,218,],[35,-51,-5,35,-4,35,-52,-54,-53,-6,35,35,35,35,35,35,35,35,35,-84,35,-81,-55,35,-79,-80,-70,35,35,188,-83,-86,-74,-72,-85,35,35,35,35,35,-82,-76,-71,-75,188,-78,]),'MOD_OP':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,65,-33,-27,65,65,65,65,65,-50,65,65,65,65,-24,65,65,-30,65,65,-39,65,65,65,-40,65,65,65,65,-41,65,65,-28,-23,-28,65,65,65,65,]),'OR':([3,6,7,12,15,23,26,28,34,38,39,40,49,50,53,67,68,72,74,75,77,78,80,84,89,90,91,92,93,94,95,96,97,98,99,100,101,103,108,109,130,161,162,181,194,],[-34,-32,-35,-27,-29,-36,-31,66,-33,-27,66,66,66,66,66,-50,66,66,66,66,-24,66,66,-30,-43,-47,-39,-48,-49,-38,-40,-45,-44,-37,-46,-41,-42,66,-28,-23,-28,66,66,66,66,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_def_args':([86,149,],[117,170,]),'elseif_list':([180,217,],[186,218,]),'small_stmt':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'argument':([86,149,],[121,121,]),'boolean':([0,2,5,14,19,20,22,25,30,35,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,128,129,132,133,135,138,155,163,169,175,177,178,188,200,203,206,207,209,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'return_stmt':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'list_args':([44,73,79,110,],[76,107,111,136,]),'const_decl':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'program':([0,19,46,],[11,48,81,]),'compound_stmt':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'body':([104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[131,141,142,156,157,159,160,171,176,179,183,184,205,208,211,212,214,]),'head':([24,],[51,]),'func_def':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'simple_stmt':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'assignment':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'stmt':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[19,46,19,19,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'for_stmt':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'loop_stmt':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'func_call':([0,2,5,14,19,20,22,25,30,35,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,128,129,132,133,135,138,155,163,169,175,177,178,188,200,203,206,207,209,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_stmt':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expr':([0,2,5,14,19,20,22,25,30,35,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,79,104,110,114,115,128,129,132,133,135,138,155,163,169,175,177,178,188,200,203,206,207,209,],[28,39,40,28,28,49,50,53,67,68,72,74,75,78,80,28,89,90,91,92,93,94,95,96,97,98,99,100,101,103,78,78,28,78,28,28,28,28,28,28,161,162,28,28,28,181,28,28,194,28,28,28,28,28,]),'while_stmt':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'display':([0,14,19,46,104,114,115,128,129,132,133,155,163,169,177,178,200,203,206,207,209,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_stmts','./parsing.py',25),
  ('program -> stmt program','program',2,'p_stmts','./parsing.py',26),
  ('program -> END_STATEMENT stmt program','program',3,'p_stmts','./parsing.py',27),
  ('stmt -> simple_stmt','stmt',1,'p_stmt_type','./parsing.py',36),
  ('stmt -> compound_stmt','stmt',1,'p_stmt_type','./parsing.py',37),
  ('simple_stmt -> small_stmt END_STATEMENT','simple_stmt',2,'p_simple_stmt','./parsing.py',41),
  ('small_stmt -> assignment','small_stmt',1,'p_small_stmt','./parsing.py',45),
  ('small_stmt -> const_decl','small_stmt',1,'p_small_stmt','./parsing.py',46),
  ('small_stmt -> expr','small_stmt',1,'p_small_stmt','./parsing.py',47),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','./parsing.py',48),
  ('small_stmt -> display','small_stmt',1,'p_small_stmt','./parsing.py',49),
  ('small_stmt -> loop_stmt','small_stmt',1,'p_small_stmt','./parsing.py',50),
  ('return_stmt -> RETURN','return_stmt',1,'p_return','./parsing.py',54),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return','./parsing.py',55),
  ('loop_stmt -> BREAK','loop_stmt',1,'p_break','./parsing.py',62),
  ('loop_stmt -> CONTINUE','loop_stmt',1,'p_continue','./parsing.py',66),
  ('display -> DISPLAY LPAREN expr RPAREN','display',4,'p_display','./parsing.py',70),
  ('assignment -> IDENTIFIER ASSIGN expr','assignment',3,'p_assign','./parsing.py',74),
  ('assignment -> IDENTIFIER ASSIGN LSBRACKET list_args RSBRACKET','assignment',5,'p_assign','./parsing.py',75),
  ('assignment -> IDENTIFIER LSBRACKET expr RSBRACKET ASSIGN expr','assignment',6,'p_assign','./parsing.py',76),
  ('const_decl -> IDENTIFIER CONST expr','const_decl',3,'p_const','./parsing.py',85),
  ('const_decl -> IDENTIFIER CONST LSBRACKET list_args RSBRACKET','const_decl',5,'p_const','./parsing.py',86),
  ('func_call -> IDENTIFIER LPAREN list_args RPAREN','func_call',4,'p_func_call','./parsing.py',94),
  ('func_call -> IDENTIFIER LPAREN RPAREN','func_call',3,'p_func_call','./parsing.py',95),
  ('list_args -> expr','list_args',1,'p_list_args','./parsing.py',102),
  ('list_args -> expr COMMA list_args','list_args',3,'p_list_args','./parsing.py',103),
  ('expr -> IDENTIFIER','expr',1,'p_expr_id','./parsing.py',111),
  ('expr -> IDENTIFIER LSBRACKET expr RSBRACKET','expr',4,'p_expr_id','./parsing.py',112),
  ('expr -> STRING','expr',1,'p_expr_string','./parsing.py',119),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','./parsing.py',123),
  ('expr -> func_call','expr',1,'p_expr','./parsing.py',124),
  ('expr -> INTEGER','expr',1,'p_expr_int','./parsing.py',131),
  ('expr -> DOUBLE','expr',1,'p_expr_double','./parsing.py',135),
  ('expr -> boolean','expr',1,'p_expr_bool','./parsing.py',139),
  ('boolean -> TRUE','boolean',1,'p_true','./parsing.py',143),
  ('boolean -> FALSE','boolean',1,'p_false','./parsing.py',147),
  ('expr -> expr ADD_OP expr','expr',3,'p_op','./parsing.py',151),
  ('expr -> expr SUB_OP expr','expr',3,'p_op','./parsing.py',152),
  ('expr -> expr MUL_OP expr','expr',3,'p_op','./parsing.py',153),
  ('expr -> expr DIV_OP expr','expr',3,'p_op','./parsing.py',154),
  ('expr -> expr MOD_OP expr','expr',3,'p_op','./parsing.py',155),
  ('expr -> expr OR expr','expr',3,'p_op','./parsing.py',156),
  ('expr -> expr AND expr','expr',3,'p_op','./parsing.py',157),
  ('expr -> expr CEQ expr','expr',3,'p_op','./parsing.py',158),
  ('expr -> expr CNE expr','expr',3,'p_op','./parsing.py',159),
  ('expr -> expr CLT expr','expr',3,'p_op','./parsing.py',160),
  ('expr -> expr CLE expr','expr',3,'p_op','./parsing.py',161),
  ('expr -> expr CGT expr','expr',3,'p_op','./parsing.py',162),
  ('expr -> expr CGE expr','expr',3,'p_op','./parsing.py',163),
  ('expr -> SUB_OP expr','expr',2,'p_expr_signed','./parsing.py',167),
  ('compound_stmt -> func_def','compound_stmt',1,'p_compound_stmt','./parsing.py',171),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','./parsing.py',172),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','./parsing.py',173),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','./parsing.py',174),
  ('func_def -> FUNCTION head END_STATEMENT INDENT body DEDENT','func_def',6,'p_func_def','./parsing.py',178),
  ('head -> IDENTIFIER LPAREN func_def_args RPAREN COLON','head',5,'p_head','./parsing.py',182),
  ('head -> IDENTIFIER LPAREN RPAREN COLON','head',4,'p_head','./parsing.py',183),
  ('func_def_args -> argument','func_def_args',1,'p_func_def_args','./parsing.py',190),
  ('func_def_args -> argument COMMA func_def_args','func_def_args',3,'p_func_def_args','./parsing.py',191),
  ('argument -> T_INT IDENTIFIER','argument',2,'p_func_def_arg_int','./parsing.py',198),
  ('argument -> T_DOUBLE IDENTIFIER','argument',2,'p_func_def_arg_double','./parsing.py',202),
  ('argument -> T_BOOL IDENTIFIER','argument',2,'p_func_def_arg_bool','./parsing.py',206),
  ('argument -> T_LIST_INT IDENTIFIER','argument',2,'p_func_def_arg_list_int','./parsing.py',210),
  ('argument -> T_LIST_DOUBLE IDENTIFIER','argument',2,'p_func_def_arg_list_double','./parsing.py',214),
  ('argument -> T_LIST_BOOL IDENTIFIER','argument',2,'p_func_def_arg_list_bool','./parsing.py',218),
  ('argument -> T_LIST_STRING IDENTIFIER','argument',2,'p_func_def_arg_list_string','./parsing.py',222),
  ('argument -> T_STRING IDENTIFIER','argument',2,'p_func_def_arg_string','./parsing.py',226),
  ('body -> stmt','body',1,'p_body','./parsing.py',230),
  ('body -> stmt body','body',2,'p_body','./parsing.py',231),
  ('while_stmt -> WHILE expr COLON END_STATEMENT INDENT body DEDENT','while_stmt',7,'p_while','./parsing.py',238),
  ('for_stmt -> FOR IDENTIFIER IN RANGE LPAREN expr COMMA expr RPAREN COLON END_STATEMENT INDENT body DEDENT','for_stmt',14,'p_for','./parsing.py',243),
  ('for_stmt -> FOR IDENTIFIER IN IDENTIFIER COLON END_STATEMENT INDENT body DEDENT','for_stmt',9,'p_for','./parsing.py',244),
  ('if_stmt -> IF expr COLON END_STATEMENT INDENT body DEDENT','if_stmt',7,'p_if','./parsing.py',255),
  ('if_stmt -> IF expr COLON END_STATEMENT INDENT body DEDENT elseif_list','if_stmt',8,'p_if','./parsing.py',256),
  ('if_stmt -> IF expr COLON END_STATEMENT INDENT body DEDENT elseif_list ELSE COLON END_STATEMENT INDENT body DEDENT','if_stmt',14,'p_if','./parsing.py',257),
  ('if_stmt -> IF expr COLON END_STATEMENT INDENT body DEDENT ELSE COLON END_STATEMENT INDENT body DEDENT','if_stmt',13,'p_if','./parsing.py',258),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT INDENT body DEDENT','elseif_list',7,'p_elseif','./parsing.py',269),
  ('elseif_list -> ELSEIF expr COLON END_STATEMENT INDENT body DEDENT elseif_list','elseif_list',8,'p_elseif','./parsing.py',270),
  ('stmt -> IF expr END_STATEMENT INDENT body DEDENT','stmt',6,'p_colon_forgotten','./parsing.py',279),
  ('stmt -> ELSEIF expr END_STATEMENT INDENT body DEDENT','stmt',6,'p_colon_forgotten','./parsing.py',280),
  ('stmt -> ELSE expr END_STATEMENT INDENT body DEDENT','stmt',6,'p_colon_forgotten','./parsing.py',281),
  ('stmt -> FOR IDENTIFIER IN RANGE LPAREN expr COMMA expr RPAREN END_STATEMENT INDENT body DEDENT','stmt',13,'p_colon_forgotten','./parsing.py',282),
  ('stmt -> FOR IDENTIFIER IN IDENTIFIER END_STATEMENT INDENT body DEDENT','stmt',8,'p_colon_forgotten','./parsing.py',283),
  ('stmt -> WHILE expr END_STATEMENT INDENT body DEDENT','stmt',6,'p_colon_forgotten','./parsing.py',284),
  ('stmt -> FUNCTION IDENTIFIER LPAREN func_def_args RPAREN END_STATEMENT INDENT body DEDENT','stmt',9,'p_colon_forgotten','./parsing.py',285),
  ('stmt -> FUNCTION IDENTIFIER LPAREN RPAREN END_STATEMENT INDENT body DEDENT','stmt',8,'p_colon_forgotten','./parsing.py',286),
]
