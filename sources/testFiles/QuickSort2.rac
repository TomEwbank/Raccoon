

function Quicksort(List_Integer A,Integer low,Integer high):
	if low < high:
		pivot becomes A[low]
		leftwall becomes low

		for i in range (low + 1, high):
			if (A[i] < pivot):
				leftwall becomes leftwall + 1
				temp1 becomes A[i]
				A[i] becomes A[leftwall]
				A[leftwall] becomes temp1

		temp2 becomes A[low]
		A[low] becomes A[leftwall]
		A[leftwall] becomes temp2
		pivot becomes leftwall
		arg1 becomes  pivot - 1
		arg2 becomes pivot + 1
		Quicksort( A, low,  arg1)
		Quicksort( A, arg2, high)

	
function main():
	a becomes [4,3,2,1] 
	b becomes [1,3,5,1, 5] 
	c becomes [4,3,2,1,7,3,4] 
	display(111)
	display(a)
	Quicksort(a, 0, 3)
	display(111)
	display(a)
	
	display(111)
	display(b)
	Quicksort(b, 0, 4)
	display(111)
	display(b)
	
	display(111)
	display(c)
	Quicksort(c, 0, 7)
	display(111)
	display(c)

	

